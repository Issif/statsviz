// Code generated by vfsgen; DO NOT EDIT.

// +build !dev

package statsviz

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// assets statically implements the virtual filesystem provided to vfsgen.
var assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2020, 10, 4, 14, 8, 1, 435922232, time.UTC),
		},
		"/app.js": &vfsgen۰CompressedFileInfo{
			name:             "app.js",
			modTime:          time.Date(2020, 10, 4, 12, 40, 35, 84217389, time.UTC),
			uncompressedSize: 1414,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x84\x54\xc1\x6e\xdb\x3a\x10\xbc\xfb\x2b\x36\xc2\x3b\x50\x49\x40\xe7\x5d\x7a\x88\xa1\x02\x6d\x92\x43\x0a\xb4\x0d\x62\x14\x39\x14\x45\x40\x53\x6b\x9b\x08\x4d\x0a\xe2\x32\x42\x50\xf8\xdf\x8b\x15\x2d\x5b\x52\xd5\x56\x17\x11\xe2\xec\xec\xec\x70\x28\xb1\x8e\x4e\x93\xf1\x0e\x44\x0e\x3f\x67\x00\x00\xc7\x2f\xff\x09\x53\x76\x1f\xf9\xa9\x91\x62\xed\xa0\xf4\x3a\xee\xd0\x91\xdc\x20\xdd\x59\xe4\xe5\xc7\xb7\xfb\x92\xc1\x8b\x16\xbb\x9f\x0d\x79\x56\xd1\xd8\xf2\x09\x57\xc1\xeb\x17\xa4\x6f\x8f\xf7\xa2\xcf\xfa\xaa\x6a\xb0\x5e\x43\x01\x8d\x71\xa5\x6f\xa4\xf5\x5a\x71\xdd\x25\x34\xe1\xb9\xaa\x3d\x41\x01\x59\x13\xae\xb3\xc5\xb1\xc6\xac\x41\x58\xaf\x25\xef\x7a\xed\x2d\x14\x45\x01\xd9\x96\xa8\x0a\xd7\x59\x9f\x9c\x9f\x26\x3c\xc7\xda\x24\x92\x01\xcb\x7e\x3c\x59\xd7\xef\x02\xb2\xf9\x3c\x83\x0b\xd6\x25\xb7\x3e\xd0\x61\x59\x29\xda\x3a\xb5\x43\x06\x34\x21\xeb\x0f\xab\xbd\x0b\x04\xa5\x22\xf5\x88\x84\x8e\xf5\x2f\x51\x7b\x57\x06\x28\xe0\xdd\xd5\x22\xa1\xe6\xe7\xf0\x84\xab\x65\xeb\x03\x68\x65\xed\x4a\xe9\x97\x00\xe7\xf3\xb4\x6d\x91\x20\x99\x04\x05\x38\x6c\x4e\x60\x31\xe1\xe1\xc1\x6d\xee\xec\x2d\x4a\xeb\x37\x22\xfb\x40\x84\xbb\x8a\x8c\xdb\xc0\x8d\x77\x0e\xdb\x03\x90\x52\x66\xf9\x41\x41\xaa\x97\xde\xf9\x0a\x1d\x14\x7c\xea\xc5\xfb\x9e\x61\x03\xb6\x65\xd4\x1a\x43\x58\x47\x6b\xdf\x3a\x3e\x2c\xb3\xee\x98\xc7\x94\xda\xfa\x80\x50\x00\xbe\xa2\xa3\xbf\xd1\xa6\x11\x6f\x18\x5e\xf6\x74\x5e\x43\x76\x99\x8a\xf3\xd3\x21\x1d\xd8\x03\xba\x52\x64\x37\xd6\x30\x75\xaa\x3c\xcb\xf2\x69\x1d\x58\xd7\xbe\x66\x1d\xe9\xfd\x2f\x1d\x77\x0c\x4b\xbd\x79\x35\x9a\x8e\xe3\x69\x9c\xa1\x5b\xef\x78\xb6\xb5\xb2\x01\x17\xc3\x7e\x3b\x0c\x41\x6d\xfe\x30\x39\x9f\xe9\x0e\x77\x4b\x52\xc4\x51\xf8\xb4\xfc\xfa\x45\x56\xaa\x0e\x28\x5a\xb0\xe4\xc8\xe4\x83\x60\x9f\x75\xed\xc6\x41\x0e\xcc\x21\x79\x57\x4c\x05\xed\xf2\xd8\x47\x7e\xc6\x5d\xcf\xc2\x96\xf8\x34\x02\xd5\x11\x87\x9b\x29\xfe\xfd\x8b\x71\x5c\xc6\xaa\x54\x84\x2d\xab\x98\xa0\x1f\x5f\xf5\x29\x78\x7f\x8c\x34\x42\x15\xc3\xf6\x56\x91\x12\x9c\xf1\x5b\x45\x28\xf2\x93\xf8\x2e\xa9\x9d\x1d\xd1\x48\x13\x1e\x54\x0c\x58\x8a\x7c\x6c\x49\x52\x3e\x25\x9c\x7d\x67\x97\xa0\x38\x34\x0d\xd6\x68\x9c\x34\x2e\x1f\xfe\x58\x18\x22\xb7\xa8\xaa\xef\x57\x3f\xa4\x45\xb7\xa1\x2d\x14\x05\xfc\x3f\xee\x1d\x8d\xd4\x35\x2a\xc2\x07\xeb\x29\xb4\x65\xf9\xd4\xcf\x25\x1a\x99\x6c\xf9\x0d\xb7\x9f\xcd\xf6\xed\x3d\xfe\x15\x00\x00\xff\xff\xd9\x93\xf5\xbb\x86\x05\x00\x00"),
		},
		"/buffer.js": &vfsgen۰CompressedFileInfo{
			name:             "buffer.js",
			modTime:          time.Date(2020, 9, 13, 22, 23, 8, 683400866, time.UTC),
			uncompressedSize: 1561,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x84\x54\xcb\x6e\xdb\x30\x10\xbc\xfb\x2b\x06\xb9\x44\x42\x6c\x2b\xe7\xa6\x2a\xd0\xa6\x3d\xe7\x12\xa0\x87\xa2\x28\xd6\xd2\xca\x22\x40\x93\x04\xb9\x72\x60\x14\xfe\xf7\x82\x7a\xd8\x96\xc3\xb8\x3e\x99\xcb\xe1\x72\x76\x66\xa8\xa2\xc0\xb7\xae\x69\xd8\xa3\xe6\x4a\x93\xe7\x00\x69\x79\xaa\x55\x9a\x42\x58\x2f\xf6\xe4\xa7\x4a\x89\xac\xe9\x4c\x25\xca\x1a\x64\x39\xfe\x2e\x00\x0c\xb0\x09\x31\x94\xfa\xb2\x35\x41\x7c\x57\x89\xf5\x99\x66\xb3\x44\x45\x2e\xbf\xd8\x8f\x3f\xd5\x20\xab\xc8\x61\x05\xcd\x06\x9f\xf1\x78\x0d\x98\x1a\x59\xcd\xeb\x1f\xde\x5b\x9f\xdd\x9d\xf1\xbb\x2e\x08\x36\x0c\x67\x83\x12\xb5\xe7\xbb\xfc\x69\x76\xf8\xb8\x98\x2d\x8b\x02\xaf\x2f\xdf\x5f\x32\xf2\x3a\xff\x84\x3d\xe9\x8e\xd1\x05\x65\xb6\x78\x3d\x38\xae\xbf\x7a\x4f\x07\x78\x92\x96\x3d\xa4\x25\x83\xa1\xd2\xb2\xe7\x59\x1f\x69\x55\x58\xff\xd9\x74\x0d\x4a\x18\x7e\x1b\x60\x71\x8c\xab\xeb\x07\x9c\xb3\x01\x25\x1e\x53\x5b\x71\x86\x32\x4e\x92\xda\x8c\x63\x96\x51\xb3\xf3\xe6\xf1\xf4\x4f\x53\x90\x2c\x25\x66\x7f\x56\xb3\xd9\x4a\x9b\xe5\x28\xcb\xb4\xa2\xd2\x7a\xfb\x86\xfb\x67\x32\xc6\x0a\x2a\xd2\x7a\xea\x68\x0d\xc8\x80\x77\x4e\x0e\xa3\xa3\xf7\xd7\x9a\x5e\xae\x3c\x4b\xe7\xcd\x59\x91\x5f\xa7\x99\x7f\xa7\x68\xbb\x2e\xb4\x99\x93\x0f\x89\xf7\x62\x7d\x29\xcf\x0a\xa4\xc8\x17\x05\x76\x76\xcf\xa8\x49\x08\x62\xfb\xc0\x6e\x78\xbb\x55\x26\x5a\x69\x9b\xa1\xd0\x73\x5f\x82\x9b\x86\xab\x98\x0d\x7d\x40\xad\x42\x45\xbe\x56\x66\x9b\xea\x19\x4f\x55\xe4\x56\xd1\x14\xab\x6b\x0e\x02\xd6\xbc\x63\x23\x21\xa1\xdf\x38\xef\xba\xb2\xee\xf0\x53\x49\xab\x4c\xf6\xb8\xbc\x70\x6e\x75\xb6\xf8\x2a\x15\xd7\xc9\x38\xe1\x6e\x66\x37\xa5\x30\x4a\x38\xf9\x20\x72\x0f\x0f\xc9\xd8\x4c\xc1\xb8\xa9\xff\x05\xf5\x84\xfc\x33\xcb\xff\x47\x7b\x06\x76\x36\xa4\x48\x15\x05\x82\x56\x15\x8f\xe0\x00\x1a\xd7\xa3\x95\xd1\x10\x4d\x12\x0d\x89\x96\x3b\xab\x8c\x04\x38\xcf\x81\x8d\x40\x99\x0b\xbf\xd7\xa7\xa6\x7d\x87\x2c\x31\x42\x51\xe0\x99\x5c\x7f\xa6\x56\x3b\x36\x21\x7e\xca\xc6\x9b\x06\x02\x5c\x8f\xf7\x8f\xd9\xea\x73\x46\x7b\x52\x9a\x36\x9a\xdf\x09\x17\xe9\x8d\x92\x4d\xf2\xa6\x64\x1b\xde\xfa\x0c\x76\x53\x39\xcd\x82\x20\xe4\xe5\x14\x91\xe8\xcd\xea\xfd\xd7\xe2\xfa\x09\xae\x87\xd1\xfb\xb3\xcb\xb1\xc5\x03\xe6\x39\x1c\xc4\x3f\x2e\x86\x2b\xc7\x0e\xc3\x73\x7f\x5a\x1c\xb3\x3c\x7f\xfa\x17\x00\x00\xff\xff\x93\x89\x21\xf8\x19\x06\x00\x00"),
		},
		"/index.html": &vfsgen۰CompressedFileInfo{
			name:             "index.html",
			modTime:          time.Date(2020, 10, 4, 18, 11, 28, 676581129, time.UTC),
			uncompressedSize: 682,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x84\x92\xc1\x6a\xdc\x30\x10\x86\xef\x7e\x8a\x89\xee\xb2\xc8\xad\x04\xd9\x97\x66\x8f\xed\x96\x36\x14\x7a\xd4\x4a\xb3\xab\x59\x64\x49\x48\x63\xc3\xe6\xe9\x8b\x62\x6f\xb3\x4d\x02\x39\x0d\xf6\x37\xf3\xfb\xe7\xc3\xfa\xee\x71\xff\xf5\xe9\xcf\x8f\x1d\x78\x9e\xc2\xd8\xe9\x36\x20\x98\x78\x1a\x04\x46\x31\x76\x9d\xf6\x68\xdc\xd8\x01\x00\x68\x26\x0e\x38\xfe\x62\xc3\x75\xa1\x67\xad\xd6\xe7\x6e\x85\x13\xb2\x01\xeb\x4d\xa9\xc8\x83\x98\xf9\x28\xbf\x88\xf1\x06\x45\x33\xe1\x20\x1c\x56\x5b\x28\x33\xa5\x28\xc0\xa6\xc8\x18\x79\x10\xd7\x48\xa0\xc8\x58\x8e\xc6\xa2\x00\xb5\x1d\xdf\x49\xf9\xb8\x87\xef\xfb\x27\xf8\xb9\xfb\xb6\xff\xbd\x7b\x00\xf6\x54\xc1\xa6\x69\xc2\xc8\x70\x42\xae\x50\x30\x07\x63\xd1\x01\x45\x70\xb8\x60\x48\xb9\x41\x29\xb7\x8c\xf5\x9b\x50\x8b\x1d\x84\x67\xce\xf5\x41\x29\xeb\x62\x9f\x43\xe2\x3e\x5c\x54\x9b\xe1\x22\x83\x61\xac\xdc\x4f\x14\xfb\x73\x15\xa3\x56\xeb\xdd\xd8\x69\xb5\x5a\xe8\xf4\x21\xb9\xcb\x6b\x31\xb8\x86\x61\x4e\xd6\x9f\x6b\x7f\x22\xf6\xf3\xa1\xa7\xb4\xbe\x51\x05\x4d\x90\x4c\x13\xc2\xbf\x2e\x8e\x16\x20\x37\x88\x96\x88\x65\x53\xf4\x42\xfc\xfd\x8d\x5b\x7f\xbf\xed\x2b\x47\xcb\xd5\xf1\xcd\x6d\x6e\xfd\x5e\xd0\x7f\xa4\xd2\x33\x4a\x1b\x4c\xad\x1f\xf3\x74\x38\xa3\xe5\x57\xf8\xde\x4f\xaf\x0e\xf3\xf1\x88\xe5\x8d\x82\x0f\xf6\x6a\x2b\xfb\xf9\xda\x4c\x9f\xef\x98\x9c\xdf\x29\x5f\x55\x37\xf7\xed\xd7\xfc\x1b\x00\x00\xff\xff\x2c\xfb\xac\x97\xaa\x02\x00\x00"),
		},
		"/stats.js": &vfsgen۰CompressedFileInfo{
			name:             "stats.js",
			modTime:          time.Date(2020, 10, 4, 18, 30, 34, 476516667, time.UTC),
			uncompressedSize: 4424,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xac\x57\x5f\x6f\xdb\x36\x10\x7f\xf7\xa7\xb8\x3d\x0c\x91\x6b\x47\x76\xb2\x3d\x45\x73\x81\x26\xc5\xba\x01\xed\x06\xcc\x7d\x0b\x8c\x81\x96\x4e\x31\x57\x91\x14\x48\x2a\x8d\x53\xe4\xbb\x0f\xfc\x23\x89\x92\x69\x27\x5d\x66\x04\xb1\x25\xde\x9f\x1f\xef\x7e\x77\x3c\x2e\x16\xa0\x34\xd1\x0a\x76\xa2\x2a\x14\xe8\x1d\x42\x41\x34\x01\xc2\x0b\x28\x1b\x9e\x6b\x2a\x38\x68\x01\x4c\x14\xb4\xdc\x03\xd5\xe9\xe4\x9e\x48\xaf\xb3\x82\xa4\x93\x49\xa6\xf0\x6d\x02\x00\x60\x96\x19\xac\xe0\xdb\x53\x36\xb1\x2f\x72\xc1\x95\x06\x5a\x3c\xfc\x86\xa4\x7e\x57\x55\x22\x87\x15\x2c\xb3\xc3\xb5\xf5\xde\x98\xbc\x88\xac\xfc\x5e\x54\x08\x2b\xb8\x8c\x2d\xf1\x46\x99\xb5\x9f\xc2\x35\xde\xb0\x35\x4a\x8a\xca\x48\xc0\x0a\x7e\x1e\x43\xf9\x73\xfb\x0f\xe6\x5a\x7d\xa4\xf7\x18\x01\xd3\xae\x0a\xf1\xa5\xa9\x63\x98\xbc\x80\xb7\x7e\x19\x75\xed\x65\x1c\xb4\x2e\x32\x36\xb8\x2b\x1f\x2a\xf3\xd1\x94\xa1\xba\x02\xde\x54\xd5\xbc\x7b\xb9\x43\x52\x5f\x01\xc7\xaf\xf0\x4e\x4a\xb2\x4f\x06\xfb\x99\xf6\x72\xc2\xf9\x88\x8a\x7a\xff\x81\x74\x45\x94\xfe\x70\x33\x90\x0e\x56\xb7\xfb\x35\x7d\xc4\x10\x49\x9b\x40\x96\x52\x4e\x35\xac\x7a\x42\x24\xdb\xa6\xac\x90\xcf\x81\x21\x5b\x1b\x2a\x4c\x83\x1d\xb9\x38\xe0\x83\x96\xe4\xba\x29\x4b\x94\x37\xa4\x26\x39\xd5\x7b\x13\xaa\x65\x06\x8b\x05\x5c\x2e\x7f\x04\x51\x3a\x19\x48\x6a\x89\xc4\xd0\x82\x68\x2c\xa6\xb0\xb5\x3a\x36\x50\xb5\xa0\x5c\xab\x91\xe1\x6d\x53\xe6\x36\xec\x0e\x03\xcc\x5a\x34\xf0\x26\xe6\x74\x0a\x0b\xb8\x58\x3a\xb7\xbc\x61\x5b\x94\xc6\x33\xc9\x75\x43\xaa\xd0\x49\xe7\xc5\xbc\x4b\x6d\x56\x60\x65\x23\xe5\xec\x75\x5b\x76\xfe\xa7\x59\xaf\x51\x0a\x09\x49\x85\x1a\xa8\xe5\x12\x50\xf8\x65\xc8\xc0\x0c\xe8\x6c\x16\x86\xa8\xf3\x63\x12\x7d\x4b\x37\xcf\x78\x6a\x55\x9e\x5e\xe8\xd3\xa7\xfe\xb8\x5b\xcf\x9b\xff\xe4\xd9\x74\x0c\xfa\x88\x90\x57\x44\x29\x54\x86\xab\x9a\x91\xfa\x24\xb2\x96\x26\xe9\xb5\x25\x59\x5a\x21\xbf\xd3\xbb\x28\x3e\x96\x5a\xc3\x46\x4c\xa5\x75\xa3\x76\xc9\x48\xf9\x96\x6e\x52\xf3\x1d\x66\xc0\x7c\x68\x09\x09\x85\xd5\xea\x88\x33\x38\x87\x8b\xb1\x2f\x5b\x14\xa8\x81\x13\x66\xda\xc0\xd9\x5b\x38\x83\x19\x34\x34\xdd\x35\x8c\xf0\xeb\xbd\x46\x75\xc2\xfb\xd8\x52\x80\xfc\x0f\xc2\x5a\xf4\xc6\xf6\x48\xf8\x09\xb0\x52\x78\x1a\xcb\xcb\x40\xc0\x0c\xce\xe0\xfc\x05\xa0\x61\x06\x17\x5e\xe7\x15\xb8\x63\x74\xb0\x7c\x72\xbd\xc3\x73\xc9\x75\x96\x41\x1e\x5d\x0a\x02\x73\x31\x92\x04\x96\x4e\x11\x24\x10\xfb\x1e\xfe\x86\x0d\x6d\xb1\x70\x20\x4d\x27\x30\x27\x9e\x69\x8c\x20\xb1\xc2\x7b\xc2\x35\x7c\xb8\x71\x4d\xd9\xf7\x3e\xdf\x35\x61\xe5\x3c\xfb\x47\x6f\xa9\xeb\x88\x4d\x5d\x10\x8d\x1f\xed\x62\x72\xbc\x2b\x72\xc2\xc5\x67\xb1\xc6\x5c\xf0\xc2\x1e\x2c\xcb\xe5\x12\xde\x84\x5f\x3d\x66\x13\x1e\xd3\x75\x3f\x11\xbd\x4b\xcb\x4a\x08\xd9\xe7\xd5\x39\x82\xc5\xd0\x60\x58\x12\x46\xdb\x61\xf5\x21\x7a\x4f\x34\x26\xda\x7b\x09\x25\x4d\xe1\x78\xc9\x1f\x86\x9b\xbc\x0d\x1f\x82\x3a\xda\x44\x73\xd2\xca\x59\xfa\xb8\x87\xa3\x1d\xe4\x2f\x64\xe2\x1e\xa1\x94\x82\x75\x19\x30\x41\x26\x36\x2d\xe6\x8d\x4d\x81\x26\xac\x56\xf0\x75\x47\xf3\x1d\x10\x89\x50\x4b\x2a\x24\x68\x11\x9a\x32\xc2\x8c\x72\xca\x1a\xd6\x2b\x01\xe5\x70\xa6\x6c\x33\x3c\x4b\x07\x31\x61\xa6\xdb\xb7\xc9\xb4\xf2\xe9\xdf\xdb\xa6\xbc\x5d\x6e\xb2\xb1\xdc\x5d\x30\xa8\x1c\x92\x76\x0e\x7c\xc4\x89\x9e\xb5\xa6\x19\x47\xc9\x6b\x62\x3d\x88\x30\xdd\xc0\x5b\x87\x29\xd6\x9c\xb6\x12\xc9\x97\x63\x45\x68\xe9\xe9\x51\xd2\x31\xd5\x0f\xb2\xa2\xea\x8a\xe6\x98\x2c\xe7\x4e\xc7\x67\xe6\xa9\x2b\x88\x1b\xc1\x35\xa1\x1c\x28\x2f\xf0\x01\x0b\xd7\xde\x6d\xa7\x57\x73\xd0\x3b\xaa\xc0\xfc\x71\xaa\x29\xa9\xe8\x23\x16\x40\x4a\x8d\x12\x24\xe6\x58\xdb\x0a\xf0\xb5\x54\x52\xa9\x34\x30\x54\x8a\xdc\x61\x3a\x19\xb7\xf4\x41\x8f\xf0\x20\xc6\x0d\x68\x2c\xe3\x85\x0c\xaf\xde\xbb\xf1\xa9\x1f\x44\xb4\x8a\x0f\x21\x41\x7a\x2d\x1f\xb5\x9a\xda\x11\xa0\x63\xc8\x24\x72\x0e\x07\x23\xea\x66\x74\xf6\x74\x0b\x01\xa5\x0f\x34\xd7\x7b\x15\xd3\x5b\xef\xd5\x29\x2d\x33\xdc\xc6\xd4\xcc\xfb\x93\x7a\x66\xf2\x8d\x2a\x9a\x85\xb1\x66\x77\xe4\x0f\x86\xdf\xb1\xfa\x27\x3b\x88\x29\x38\xef\x4f\xd1\x5f\x25\xa2\x7a\x81\x35\x37\x2c\x8f\x0d\xfa\xd7\xcf\xeb\x1b\xe0\xb1\xcd\xb4\x63\xec\x33\xf3\xd6\x77\x4c\x18\xae\x13\x2b\x77\x60\x1d\x9e\xac\xd9\x89\xd3\xc6\xe1\x33\xaa\x41\xa4\xec\xe3\x38\x4a\x41\xbb\x8b\x1f\x0d\x83\xfa\x63\x6d\x73\x0d\xa9\x1d\xe2\x96\xa8\x1b\xc9\x43\x56\x3b\x85\x64\x6c\x47\x99\x2a\x1f\x98\xe1\x54\x23\x1b\xd4\xc6\x62\x01\x9f\x29\x73\x17\xbd\xe1\x69\xe3\xa7\xde\xc0\x8d\xb5\xd7\xda\xc8\x06\x3d\xdc\xde\x7e\xea\x4a\xe8\x43\x43\x3b\x77\x31\x3a\x76\x81\xc9\x5e\x39\x3a\xf7\x53\x73\x38\x44\x8f\xb1\xc6\x4f\x9e\xf6\x5a\x16\x07\x2e\xba\x4b\xdb\x89\x1b\x55\xf6\xfa\x29\x7c\x30\x80\x8f\x46\xf2\x97\xed\xc3\xf1\xb5\x1b\xbf\x0f\xb7\xb2\xdd\x1f\x36\xdc\xc3\x11\xeb\xff\x99\xc9\x06\x25\x35\x2c\x99\x61\x39\x79\x50\xc1\xbe\xfb\xda\x7a\x7e\xdb\xbe\x0a\x86\xbe\xfd\x05\xda\x7e\xcd\x0f\x68\x72\x65\xff\xcf\x63\xc1\xbf\x6a\x7f\xcc\x63\x10\xaf\xda\x1f\xf3\xf1\x10\xe9\xf0\x78\x2c\x2c\x9b\x3c\x25\xd3\x69\xf6\x6f\x00\x00\x00\xff\xff\x5d\xad\xeb\xa1\x48\x11\x00\x00"),
		},
		"/statsviz.css": &vfsgen۰CompressedFileInfo{
			name:             "statsviz.css",
			modTime:          time.Date(2020, 9, 24, 21, 23, 45, 192276676, time.UTC),
			uncompressedSize: 1027,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x9c\x52\xd1\x6e\x9c\x30\x10\x7c\xe7\x2b\x56\xa9\xaa\x48\x51\x4c\xb8\xab\xd2\x07\xdf\xd7\xf8\xf0\x02\xdb\x2e\x36\xb2\xf7\x02\xa7\x2a\xff\x5e\x19\x0e\x8e\x72\xf4\x25\x0f\x58\xd8\xde\xd9\x19\xcf\x6c\x23\x2d\xbf\xc2\xd9\xdb\xeb\x2b\xe4\x75\x20\xab\x4a\xef\xc4\x90\xc3\x00\x7f\x32\x00\x80\x06\xa9\x6e\x44\xc3\xa1\x28\xbe\x9f\xc6\x93\xd6\x84\x9a\x9c\x86\xe2\x94\x7d\x66\xd9\x3e\xca\x52\xec\xd8\x5c\x35\xa4\xdb\x09\x36\xd6\x09\xb6\x1d\x1b\x41\x55\x7a\xbe\xb4\x2e\x6a\x68\xcd\x30\xa2\xd1\x09\x1c\x8b\xa2\x1b\xf6\xaa\x83\xef\xa3\x86\x43\x15\xe6\xef\x56\x64\x3a\x0d\x87\x6e\x48\xdf\x1e\xcc\x04\x34\x51\xc3\x53\x0e\xf9\xd3\x7a\x1d\x85\x7f\x6b\xd0\xd8\x45\xb0\xe0\x20\xca\x30\xd5\x4e\x43\x89\x4e\x30\x4c\x45\xdb\x87\xf5\x64\xa5\xd1\x70\x38\x1e\x17\xa9\xb3\x1f\xe9\x04\xcc\x45\xfc\xe4\x4b\x24\x57\x33\xaa\x28\x46\xb6\xa6\x54\x8c\x37\xec\xaf\x4b\x14\xaa\xae\xb3\x03\x1a\x62\x67\x4a\x54\x67\x94\x1e\xd1\x9d\xd6\x94\x3f\xb7\xfe\xe7\xef\x01\xdb\x91\xcb\x72\x4e\x8e\xc9\x21\x58\xbb\xe5\x9a\x2e\x1e\x92\x4b\x5b\xc6\x41\xb6\x70\x6d\x2a\x79\x4c\xf1\xcc\xbe\xfc\x3d\x81\x16\xa5\xcf\xcf\x5b\x6e\xd9\xe7\x56\x2b\x74\x4b\x4e\xcd\x16\x4e\x61\xaf\x5b\xa8\x64\xcc\xff\xcd\x4a\x7f\xaa\x62\xdf\x6b\x08\xbe\x5f\x9d\xf5\x21\x0d\x42\x5a\xff\x71\xec\xc7\x7d\x9c\xde\x5e\x20\xa2\x80\x34\x08\xf7\x44\xc7\xb2\x97\xb7\xb1\xc0\x7f\x60\x98\x5a\x7f\x50\xa4\x33\xe3\x9e\xb2\xe5\x85\x69\xa7\xa1\x80\x02\xde\xe7\x54\xc6\x01\xba\x77\x41\x66\xea\x22\xc5\xd3\xa6\x7b\x43\xd6\xa6\x60\x77\x9a\xcf\xd1\x4d\x29\x29\xc6\x4a\xf4\x6d\x9e\xb6\x13\x9a\xee\xbe\x44\xfb\x20\x3e\xfb\xfc\x1b\x00\x00\xff\xff\x70\x11\x3b\x47\x03\x04\x00\x00"),
		},
		"/ui.js": &vfsgen۰CompressedFileInfo{
			name:             "ui.js",
			modTime:          time.Date(2020, 10, 4, 18, 30, 33, 392516728, time.UTC),
			uncompressedSize: 5591,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xcc\x58\xdf\x73\xda\xc6\x13\x7f\xe7\xaf\xd8\xef\xcc\xd7\x11\x04\x59\x3f\xb0\x71\x5c\x01\xce\x0c\x6e\xea\x64\x9a\x4c\x3d\x93\xf4\x21\x61\x78\x38\xa4\x03\x5d\x22\xe9\x34\xba\x93\x0d\x4e\xf8\xdf\x3b\xf7\x43\x20\x09\xe1\x9a\xd2\xba\xd5\x83\x04\xba\xcf\xee\xde\x7e\xee\xf6\x76\xb5\xb6\x0d\x39\x81\x90\x46\x01\x03\x1e\x62\xc8\x19\xce\x80\x24\x1c\x67\x73\xe4\x63\x60\x1c\x71\xdc\xba\x43\x99\x40\x8d\xa0\x3d\xcf\x13\x9f\x13\x9a\x40\xbb\x03\xdf\x5b\x00\x00\x62\x2c\x86\x11\x7c\x5f\x0f\x5a\xf2\x45\x84\x39\xa4\x28\x67\x38\x80\x11\xcc\x51\xc4\xb0\x1e\x88\x2d\xc2\x6e\x37\x03\x65\x45\x90\x61\x9e\x67\x89\x16\x1b\xc0\x5a\xe3\x39\x5d\x2c\x22\x2c\x65\x76\x44\x36\x26\xfe\x57\x97\x4a\x23\xca\x19\x8c\x20\xc9\xa3\x48\x9b\xde\x88\xde\x5c\xbf\x27\x09\x66\xed\x00\x71\x54\x78\x20\x2e\x9f\x26\x8c\xc3\xc2\x17\x72\xc2\x67\x66\x45\x88\xf1\x9b\x6b\x36\xa8\x41\x62\x92\x48\xe5\x42\x81\xc5\x49\x8c\xd9\xc4\x99\xee\x80\xd0\xb2\x0e\xda\xfe\xb4\x22\x9c\x2c\x78\x08\xa7\xe0\x4e\xf5\xf4\x0a\xda\x58\x88\x52\x2c\x04\x27\xe5\x91\x39\xcd\xa0\x2d\x86\xc5\x0a\x38\x26\x24\x30\x12\x33\xd5\x7a\x06\x40\x60\x08\xc9\x00\x48\xb7\x5b\xf6\xa8\xd0\x19\x28\xf4\x84\x94\x66\x29\x2e\xdb\x86\xeb\x08\xc5\x29\xdc\x5c\x83\x9c\x17\xdc\x87\xc4\x0f\x01\x65\x18\x68\xce\x81\xce\x61\x46\xf3\x24\x60\x15\x29\x32\x87\x76\x00\x43\x4d\xc3\x8f\x1f\x10\xc0\x95\x72\xb7\x6e\x5b\xb3\xc1\x49\x92\xe3\xaa\xe5\x75\xab\xf2\x57\x39\x6d\xa5\x39\x0b\xdb\xbb\x2a\xf8\x2a\xc5\x1e\x18\x11\x49\xb0\x61\xee\x8c\x2e\x1d\x0f\x82\x86\xd7\x6e\xe3\xeb\x55\x86\xe7\x1e\x18\x29\x4a\x71\xd6\xa0\x6c\xe5\x78\xe0\x34\xbc\x76\x3d\x70\x77\x5f\x8b\x19\x79\x0d\x3e\x2b\xbf\x23\x9a\x79\x60\x64\x8b\x59\xbb\xdf\x37\xc1\xed\x5d\x9a\xe0\xfe\xe4\x76\x1a\xac\x8a\xeb\x9e\x04\x3c\x6c\xb4\x22\xae\x00\xb1\x50\x50\x40\x93\x85\xf8\x19\x50\xde\xa0\x66\x5d\xa5\xb8\xd3\xda\x1d\xd0\x41\xa6\xf8\x56\x4b\xb2\xae\x85\x47\x88\x51\xfa\x33\xe2\x68\x27\x3e\xb4\xec\xa4\x62\x65\xd7\xf9\xa5\x57\xda\xf3\x0d\x54\xea\x61\x61\x66\xe2\x4c\xcd\x7d\xab\xcd\x7c\xc4\x79\xe3\x1a\x25\x28\x16\x00\xa1\x00\x50\x14\x51\xbf\x01\x13\xd2\x3b\x9c\x71\x1c\xa7\x11\xe2\x02\x3c\x9c\x5d\x6d\xf1\x43\x7b\x76\xe5\xc1\xc9\xf7\x95\x67\x9d\xb3\xf5\xb8\x26\xbe\x36\xff\x46\x07\xdd\x63\x1d\x64\x2b\x76\x80\x7b\x6c\xc5\x94\x73\xff\x7f\x16\xef\x7a\xc7\x7a\x47\x82\x08\x1f\xe0\x9e\x80\x3f\xe3\xe2\x9d\x1d\xed\x5e\x72\x9a\xb3\x83\x1c\x94\x02\x4f\x76\x71\x5a\x0e\x60\xdb\x86\x90\xf3\x94\x79\xb6\x2d\xb2\x5f\xb4\xb2\x7c\x1a\xdb\x5f\xd1\x1d\x62\x7e\x46\x52\x6e\x67\x78\x8e\x33\x9c\xf8\xd8\x8e\xd0\x8a\xe6\x7c\x93\xa9\x85\xe9\xf7\xf2\x95\xc8\xe1\x1b\xed\x9c\xf0\x48\x4c\xee\x2d\x46\x69\x69\x0e\x4b\xb4\x24\xac\x7e\xea\x15\x58\x41\x6b\x6d\xbe\x9c\xf8\xdf\xe6\x34\x8b\x11\xf7\xc0\x38\x79\xeb\x9d\x7c\xf0\x4e\x3e\x96\x30\x25\x7f\x56\x8f\xa9\x9e\xad\x38\x66\x0d\xba\x59\x3e\x9f\x93\xa5\x07\x46\x9d\x28\xdb\xae\xda\x86\xda\x38\x5e\xa6\x34\xc1\x09\xdf\x00\x3e\xbe\x2b\x4f\x4b\x71\xab\x73\xb0\xca\xe9\xf2\x4c\x67\x3e\x8a\x44\x29\xb2\x3d\x07\x27\x8e\xa9\xce\x79\xf7\xe2\xc2\xec\x39\x17\x66\xaf\xf7\xca\x04\xc7\xea\x77\x8c\xd2\x0e\x9a\x38\x96\xd3\xd7\xc0\x33\xd7\x74\x7b\x8e\xe9\x5e\x3a\x66\x03\xac\x57\xa8\x7b\x75\x69\xf6\x7a\x67\xa6\x7b\x76\xd9\x04\x2b\x94\xf5\x5d\xd3\xbd\x70\xcc\xf3\xf3\x5d\x90\xab\x21\x62\x42\xbd\x0b\xb3\x57\xe8\x91\x88\x69\xbd\x30\x62\xe4\x01\x5f\x47\x88\xb1\xc6\xe3\x5f\x14\x79\x19\xe6\x15\xcf\xff\x6a\x8c\xa9\xf2\xca\x17\xb6\x3e\x92\x87\x26\xd0\x83\xd6\x31\x5b\xed\x01\xe8\x40\x0c\x31\xe2\x71\x65\x7f\xee\x8f\xb1\xec\x6a\x38\xbb\x12\x4e\x82\xb4\xbc\x0d\xb3\x35\x8c\x0d\xe8\x36\x26\xde\x42\x8c\xce\xbe\x62\x9f\x6f\x64\x1e\xd6\xe2\x7d\x83\x55\x16\xd2\xfb\x08\x2f\x70\x12\x78\xaa\xf0\x35\x5b\x8d\x95\x81\xdc\x45\x5e\xe9\x77\x2d\xc8\xb7\x31\x3e\xa8\x27\xe0\x0c\xf3\x4a\xe6\x96\x55\x63\xb1\x74\x8f\xc4\xb1\x20\x12\x24\xa8\x12\x47\xff\x56\x3c\x6f\x17\xe2\x88\xb8\xdc\xec\x5d\xbd\x3e\xcf\x50\xb8\x68\x4b\x47\xd5\x2e\x11\xb9\x7b\x62\x5a\x10\x48\xa8\x6d\xbe\xd5\xfa\x1f\xca\x7a\x85\x6b\xc7\x54\x2d\x11\xa5\xdf\xf2\xf4\x89\x45\x4b\x4a\xe5\x67\x26\x68\xa1\x67\x73\xf0\xd8\xc2\xe5\x80\x94\x7e\xc0\xda\x4d\xeb\x51\xad\x65\x1f\x89\xe9\xdf\x14\xe2\x3f\x10\xce\x7a\xae\xc6\x9e\x40\x8d\x2d\x3f\xc3\x88\xe3\x5b\xfd\x61\xbe\xfd\x90\xaf\x47\xeb\xad\x2a\x5e\x44\x0d\xd3\xd6\x64\xd7\xbe\x49\xcc\x52\xc5\xd2\x19\x34\x0b\x8a\xd3\xe5\x54\x9f\x2e\x4d\x89\xcd\xac\x1f\x99\xfb\x14\x15\x7e\x99\xbb\x47\x8c\x59\x5d\xa0\x4e\xe5\x54\x96\xfd\x92\x34\x40\x1c\xbf\x0b\x96\xe2\xa3\x7d\xa0\x79\x50\x2f\xff\x9c\x07\xb1\x01\x16\xbe\x6c\x55\xc0\xa8\xda\xb4\xd8\x4e\x75\x4b\x84\xb5\x69\x1c\x68\xa1\x2d\xa8\x32\xcb\x06\x5c\xdd\xf1\x0c\x23\xff\x49\xdc\xef\x11\x3c\x88\xb2\x56\xb9\xad\xb0\x25\xec\x04\xfa\x30\x1a\x81\x53\x6f\x29\xd8\x36\xfc\x2e\x41\xb2\x53\xb5\xcd\x21\xa0\x0b\x01\xe8\xeb\x4e\x46\x84\x19\x03\x3a\xe7\x58\xd4\x35\x89\x8f\x81\x70\x83\x89\xdc\x82\x13\x46\xee\xb0\x05\x15\xb5\x55\x07\x0e\xdf\x3c\xad\x86\xc6\xc6\xc6\x99\x6e\xb7\xb2\x33\x62\x2b\xcc\x63\x94\x8c\x45\x3d\x5b\xd9\x01\xb2\xc2\x15\xba\x8b\xa6\x99\x09\x41\x0a\x23\x70\x77\xbb\x54\x3c\xcc\x30\x0b\x61\x24\xc0\xaf\xc1\x75\x1c\x07\x3c\x70\x9d\xde\x79\x8d\xd0\x0f\x88\x87\x16\x9a\x31\xa5\xbb\x03\x43\x2d\x59\xa7\x55\xa7\x48\x89\x82\x2e\x18\x30\x36\x06\x4d\x3e\x29\xeb\x79\x42\xe4\xe6\x65\xa4\xa2\xe4\x35\x4c\x8c\x6f\x63\xc3\x04\xe3\x83\xbc\xdf\xc8\xfb\x27\x79\xbf\x95\xf7\x37\xf2\xfe\x45\xde\x3f\x8f\x75\x1d\x5a\x5c\x1e\x4c\x8c\x5f\x89\x92\x57\x8f\x1b\xf5\xf8\xa4\x1e\xb7\xea\xf1\x46\x3d\xbe\xa8\xc7\x67\x32\x36\x4a\x25\x92\x08\x9a\x1c\x46\x70\xea\xd6\xfb\x71\x99\x20\xd2\x81\x97\x2f\x21\x48\x4b\x24\x05\xb4\xc6\x84\xa2\xc0\x1e\x69\xa2\xaa\x6d\xab\x6e\x37\x2f\xd1\x02\xf7\x21\x89\xb0\x26\x39\xa3\x79\x12\xec\xf0\xfd\x12\xb2\x0e\xd8\x90\xc1\x55\xa1\x10\x5e\xbc\x80\x1c\x86\x8a\xc3\x52\x1f\xb0\x1c\x0a\xe5\xd5\xb0\x38\xfd\x85\x2c\x71\xd0\x0e\xd2\x8e\x5c\x19\x03\xba\x4a\x78\x92\x4f\x37\xfb\xaa\x55\x12\x8b\x07\xad\x75\xbb\xd3\x19\xfc\x11\x00\x00\xff\xff\x8c\x90\x98\xa6\xd7\x15\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/app.js"].(os.FileInfo),
		fs["/buffer.js"].(os.FileInfo),
		fs["/index.html"].(os.FileInfo),
		fs["/stats.js"].(os.FileInfo),
		fs["/statsviz.css"].(os.FileInfo),
		fs["/ui.js"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
