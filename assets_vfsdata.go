// Code generated by vfsgen; DO NOT EDIT.

// +build !dev

package statsviz

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// assets statically implements the virtual filesystem provided to vfsgen.
var assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2020, 10, 4, 14, 8, 1, 435922232, time.UTC),
		},
		"/app.js": &vfsgen۰CompressedFileInfo{
			name:             "app.js",
			modTime:          time.Date(2020, 10, 4, 12, 40, 35, 84217389, time.UTC),
			uncompressedSize: 1414,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x84\x54\xc1\x6e\xdb\x3a\x10\xbc\xfb\x2b\x36\xc2\x3b\x50\x49\x40\xe7\x5d\x7a\x88\xa1\x02\x6d\x92\x43\x0a\xb4\x0d\x62\x14\x39\x14\x45\x40\x53\x6b\x9b\x08\x4d\x0a\xe2\x32\x42\x50\xf8\xdf\x8b\x15\x2d\x5b\x52\xd5\x56\x17\x11\xe2\xec\xec\xec\x70\x28\xb1\x8e\x4e\x93\xf1\x0e\x44\x0e\x3f\x67\x00\x00\xc7\x2f\xff\x09\x53\x76\x1f\xf9\xa9\x91\x62\xed\xa0\xf4\x3a\xee\xd0\x91\xdc\x20\xdd\x59\xe4\xe5\xc7\xb7\xfb\x92\xc1\x8b\x16\xbb\x9f\x0d\x79\x56\xd1\xd8\xf2\x09\x57\xc1\xeb\x17\xa4\x6f\x8f\xf7\xa2\xcf\xfa\xaa\x6a\xb0\x5e\x43\x01\x8d\x71\xa5\x6f\xa4\xf5\x5a\x71\xdd\x25\x34\xe1\xb9\xaa\x3d\x41\x01\x59\x13\xae\xb3\xc5\xb1\xc6\xac\x41\x58\xaf\x25\xef\x7a\xed\x2d\x14\x45\x01\xd9\x96\xa8\x0a\xd7\x59\x9f\x9c\x9f\x26\x3c\xc7\xda\x24\x92\x01\xcb\x7e\x3c\x59\xd7\xef\x02\xb2\xf9\x3c\x83\x0b\xd6\x25\xb7\x3e\xd0\x61\x59\x29\xda\x3a\xb5\x43\x06\x34\x21\xeb\x0f\xab\xbd\x0b\x04\xa5\x22\xf5\x88\x84\x8e\xf5\x2f\x51\x7b\x57\x06\x28\xe0\xdd\xd5\x22\xa1\xe6\xe7\xf0\x84\xab\x65\xeb\x03\x68\x65\xed\x4a\xe9\x97\x00\xe7\xf3\xb4\x6d\x91\x20\x99\x04\x05\x38\x6c\x4e\x60\x31\xe1\xe1\xc1\x6d\xee\xec\x2d\x4a\xeb\x37\x22\xfb\x40\x84\xbb\x8a\x8c\xdb\xc0\x8d\x77\x0e\xdb\x03\x90\x52\x66\xf9\x41\x41\xaa\x97\xde\xf9\x0a\x1d\x14\x7c\xea\xc5\xfb\x9e\x61\x03\xb6\x65\xd4\x1a\x43\x58\x47\x6b\xdf\x3a\x3e\x2c\xb3\xee\x98\xc7\x94\xda\xfa\x80\x50\x00\xbe\xa2\xa3\xbf\xd1\xa6\x11\x6f\x18\x5e\xf6\x74\x5e\x43\x76\x99\x8a\xf3\xd3\x21\x1d\xd8\x03\xba\x52\x64\x37\xd6\x30\x75\xaa\x3c\xcb\xf2\x69\x1d\x58\xd7\xbe\x66\x1d\xe9\xfd\x2f\x1d\x77\x0c\x4b\xbd\x79\x35\x9a\x8e\xe3\x69\x9c\xa1\x5b\xef\x78\xb6\xb5\xb2\x01\x17\xc3\x7e\x3b\x0c\x41\x6d\xfe\x30\x39\x9f\xe9\x0e\x77\x4b\x52\xc4\x51\xf8\xb4\xfc\xfa\x45\x56\xaa\x0e\x28\x5a\xb0\xe4\xc8\xe4\x83\x60\x9f\x75\xed\xc6\x41\x0e\xcc\x21\x79\x57\x4c\x05\xed\xf2\xd8\x47\x7e\xc6\x5d\xcf\xc2\x96\xf8\x34\x02\xd5\x11\x87\x9b\x29\xfe\xfd\x8b\x71\x5c\xc6\xaa\x54\x84\x2d\xab\x98\xa0\x1f\x5f\xf5\x29\x78\x7f\x8c\x34\x42\x15\xc3\xf6\x56\x91\x12\x9c\xf1\x5b\x45\x28\xf2\x93\xf8\x2e\xa9\x9d\x1d\xd1\x48\x13\x1e\x54\x0c\x58\x8a\x7c\x6c\x49\x52\x3e\x25\x9c\x7d\x67\x97\xa0\x38\x34\x0d\xd6\x68\x9c\x34\x2e\x1f\xfe\x58\x18\x22\xb7\xa8\xaa\xef\x57\x3f\xa4\x45\xb7\xa1\x2d\x14\x05\xfc\x3f\xee\x1d\x8d\xd4\x35\x2a\xc2\x07\xeb\x29\xb4\x65\xf9\xd4\xcf\x25\x1a\x99\x6c\xf9\x0d\xb7\x9f\xcd\xf6\xed\x3d\xfe\x15\x00\x00\xff\xff\xd9\x93\xf5\xbb\x86\x05\x00\x00"),
		},
		"/buffer.js": &vfsgen۰CompressedFileInfo{
			name:             "buffer.js",
			modTime:          time.Date(2020, 9, 13, 22, 23, 8, 683400866, time.UTC),
			uncompressedSize: 1561,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x84\x54\xcb\x6e\xdb\x30\x10\xbc\xfb\x2b\x06\xb9\x44\x42\x6c\x2b\xe7\xa6\x2a\xd0\xa6\x3d\xe7\x12\xa0\x87\xa2\x28\xd6\xd2\xca\x22\x40\x93\x04\xb9\x72\x60\x14\xfe\xf7\x82\x7a\xd8\x96\xc3\xb8\x3e\x99\xcb\xe1\x72\x76\x66\xa8\xa2\xc0\xb7\xae\x69\xd8\xa3\xe6\x4a\x93\xe7\x00\x69\x79\xaa\x55\x9a\x42\x58\x2f\xf6\xe4\xa7\x4a\x89\xac\xe9\x4c\x25\xca\x1a\x64\x39\xfe\x2e\x00\x0c\xb0\x09\x31\x94\xfa\xb2\x35\x41\x7c\x57\x89\xf5\x99\x66\xb3\x44\x45\x2e\xbf\xd8\x8f\x3f\xd5\x20\xab\xc8\x61\x05\xcd\x06\x9f\xf1\x78\x0d\x98\x1a\x59\xcd\xeb\x1f\xde\x5b\x9f\xdd\x9d\xf1\xbb\x2e\x08\x36\x0c\x67\x83\x12\xb5\xe7\xbb\xfc\x69\x76\xf8\xb8\x98\x2d\x8b\x02\xaf\x2f\xdf\x5f\x32\xf2\x3a\xff\x84\x3d\xe9\x8e\xd1\x05\x65\xb6\x78\x3d\x38\xae\xbf\x7a\x4f\x07\x78\x92\x96\x3d\xa4\x25\x83\xa1\xd2\xb2\xe7\x59\x1f\x69\x55\x58\xff\xd9\x74\x0d\x4a\x18\x7e\x1b\x60\x71\x8c\xab\xeb\x07\x9c\xb3\x01\x25\x1e\x53\x5b\x71\x86\x32\x4e\x92\xda\x8c\x63\x96\x51\xb3\xf3\xe6\xf1\xf4\x4f\x53\x90\x2c\x25\x66\x7f\x56\xb3\xd9\x4a\x9b\xe5\x28\xcb\xb4\xa2\xd2\x7a\xfb\x86\xfb\x67\x32\xc6\x0a\x2a\xd2\x7a\xea\x68\x0d\xc8\x80\x77\x4e\x0e\xa3\xa3\xf7\xd7\x9a\x5e\xae\x3c\x4b\xe7\xcd\x59\x91\x5f\xa7\x99\x7f\xa7\x68\xbb\x2e\xb4\x99\x93\x0f\x89\xf7\x62\x7d\x29\xcf\x0a\xa4\xc8\x17\x05\x76\x76\xcf\xa8\x49\x08\x62\xfb\xc0\x6e\x78\xbb\x55\x26\x5a\x69\x9b\xa1\xd0\x73\x5f\x82\x9b\x86\xab\x98\x0d\x7d\x40\xad\x42\x45\xbe\x56\x66\x9b\xea\x19\x4f\x55\xe4\x56\xd1\x14\xab\x6b\x0e\x02\xd6\xbc\x63\x23\x21\xa1\xdf\x38\xef\xba\xb2\xee\xf0\x53\x49\xab\x4c\xf6\xb8\xbc\x70\x6e\x75\xb6\xf8\x2a\x15\xd7\xc9\x38\xe1\x6e\x66\x37\xa5\x30\x4a\x38\xf9\x20\x72\x0f\x0f\xc9\xd8\x4c\xc1\xb8\xa9\xff\x05\xf5\x84\xfc\x33\xcb\xff\x47\x7b\x06\x76\x36\xa4\x48\x15\x05\x82\x56\x15\x8f\xe0\x00\x1a\xd7\xa3\x95\xd1\x10\x4d\x12\x0d\x89\x96\x3b\xab\x8c\x04\x38\xcf\x81\x8d\x40\x99\x0b\xbf\xd7\xa7\xa6\x7d\x87\x2c\x31\x42\x51\xe0\x99\x5c\x7f\xa6\x56\x3b\x36\x21\x7e\xca\xc6\x9b\x06\x02\x5c\x8f\xf7\x8f\xd9\xea\x73\x46\x7b\x52\x9a\x36\x9a\xdf\x09\x17\xe9\x8d\x92\x4d\xf2\xa6\x64\x1b\xde\xfa\x0c\x76\x53\x39\xcd\x82\x20\xe4\xe5\x14\x91\xe8\xcd\xea\xfd\xd7\xe2\xfa\x09\xae\x87\xd1\xfb\xb3\xcb\xb1\xc5\x03\xe6\x39\x1c\xc4\x3f\x2e\x86\x2b\xc7\x0e\xc3\x73\x7f\x5a\x1c\xb3\x3c\x7f\xfa\x17\x00\x00\xff\xff\x93\x89\x21\xf8\x19\x06\x00\x00"),
		},
		"/index.html": &vfsgen۰CompressedFileInfo{
			name:             "index.html",
			modTime:          time.Date(2020, 10, 5, 12, 18, 32, 60841421, time.UTC),
			uncompressedSize: 716,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x84\x92\x4f\x6f\x1b\x21\x10\xc5\xef\xfb\x29\x26\xdc\x59\x94\x5b\x15\xb1\x7b\x69\x7c\x6c\x5d\xb5\x51\xa5\x1e\x31\x8c\xcd\x58\xfc\x13\x8c\x2d\x39\x9f\xbe\x22\x6b\x37\x6e\x62\xc9\xa7\xd1\xee\xef\xcd\x63\x78\x83\x7e\x78\x5e\x7f\x7d\xf9\xf3\x63\x05\x9e\x63\x98\x07\xdd\x0b\x04\x93\x76\x93\xc0\x24\xe6\x61\xd0\x1e\x8d\x9b\x07\x00\x00\xcd\xc4\x01\xe7\x5f\x6c\xb8\x1d\xe9\x55\xab\xe5\x7b\x58\x60\x44\x36\x60\xbd\xa9\x0d\x79\x12\x07\xde\xca\x2f\x62\xbe\x42\xc9\x44\x9c\x84\xc3\x66\x2b\x15\xa6\x9c\x04\xd8\x9c\x18\x13\x4f\xe2\x62\x09\x94\x18\xeb\xd6\x58\x14\xa0\xce\xcd\x0f\x52\x3e\xaf\xe1\xfb\xfa\x05\x7e\xae\xbe\xad\x7f\xaf\x9e\x80\x3d\x35\xb0\x39\x46\x4c\x0c\x3b\xe4\x06\x15\x4b\x30\x16\x1d\x50\x02\x87\x47\x0c\xb9\x74\x28\xe5\xd9\x63\x39\x13\x5a\xb5\x93\xf0\xcc\xa5\x3d\x29\x65\x5d\x1a\x4b\xc8\x3c\x86\x93\xea\x35\x9c\x64\x30\x8c\x8d\xc7\x48\x69\xdc\x37\x31\x6b\xb5\xf4\xcd\x83\x56\x4b\x0a\x83\xde\x64\x77\x7a\x1f\x0c\x2e\x66\x58\xb2\xf5\xfb\x36\xee\x88\xfd\x61\x33\x52\x5e\xfe\xa8\x8a\x26\x48\xa6\x88\xf0\x6f\x16\x47\x47\x20\x37\x89\xee\x88\xf5\x1c\xd1\x1b\xf1\x8f\x57\xd9\xfa\xc7\xb3\x5e\x39\x3a\x5e\x32\xbe\xea\x2d\x7d\xbe\x37\xf4\x1f\x89\xad\x98\x24\xa3\x35\xd6\xe3\x6d\x45\xa3\x57\x94\x36\x98\xd6\x6e\xf3\xbc\xd9\xa3\xe5\x77\xf8\x39\xc1\x51\x6d\x0e\xdb\x2d\xd6\x0f\x21\xdd\xd0\xb5\x7e\x9d\xfb\xb2\x03\xdd\xd7\x98\x52\x3e\x2d\x65\x59\x46\xdf\x4e\x7f\xbc\x7f\x03\x00\x00\xff\xff\x17\x8e\x77\x07\xcc\x02\x00\x00"),
		},
		"/stats.js": &vfsgen۰CompressedFileInfo{
			name:             "stats.js",
			modTime:          time.Date(2020, 10, 5, 12, 24, 35, 352820982, time.UTC),
			uncompressedSize: 5377,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xac\x58\x5b\x6f\xdb\xb6\x17\x7f\xcf\xa7\x38\xff\x87\x3f\x22\x37\xae\xec\x64\x7b\xb2\xe6\x02\x6d\x8a\x75\x05\xda\x0d\x98\xbb\xa7\xc0\x18\x68\xe9\xa8\xe2\x2a\x92\x82\x48\xa5\x75\x8b\x7c\xf7\x81\x17\xc9\x14\x45\x3b\xee\x9a\x20\xb0\x2d\xf2\x5c\x7e\x3c\x37\x9e\xa3\xc5\x02\xa4\x22\x4a\x42\x25\xea\x42\x82\xaa\x10\x0a\xa2\x08\x10\x5e\x40\xd9\xf1\x5c\x51\xc1\x41\x09\x60\xa2\xa0\xe5\x1e\xa8\x4a\x2f\xee\x49\xeb\x78\xd6\x90\x0c\x34\xc9\x0c\xbe\x5d\x00\x00\xe8\x6d\x06\x6b\xf8\xf6\x90\x5d\x98\x85\x5c\x70\xa9\x80\x16\x5f\x7e\x43\xd2\xbc\xac\x6b\x91\xc3\x1a\x96\xd9\x74\x6f\xb3\xd7\x22\xaf\x23\x3b\x6f\x8b\x1a\x61\x0d\x37\xb1\x2d\xde\x49\xbd\xf7\x93\xbf\xc7\x3b\xb6\xc1\x96\xa2\xd4\x14\xb0\x86\x9f\x43\x28\xef\x37\x0d\xe1\xef\x6f\x49\x5e\xa1\xf9\xf9\x96\xff\x65\xa4\x84\xb0\x42\xba\x38\x44\x4b\x65\x3f\x0c\x6d\x2f\xee\xe6\x31\x42\x2b\x2f\x8e\xdd\xd3\x1d\x3b\xc2\x1f\xbb\x7f\x30\x57\xf2\x1d\xbd\x8f\x01\xef\x77\x85\xf8\xd4\x35\x31\xcc\x8e\xc0\x19\xe8\x26\x8a\xc0\xd1\x58\x84\x83\x73\x4d\x7c\xac\x9d\xb7\xf5\x9f\xa2\x0c\xe5\x0a\x78\x57\xd7\xf3\x61\xb1\x42\xd2\xac\x80\xe3\x67\x78\xd9\xb6\x64\x9f\x8c\x5c\x32\x3b\xd0\x31\x39\x9c\x32\x4a\xee\x59\xc1\xe3\x12\x16\x59\x94\xc3\xa1\xf6\xa8\x6b\x22\xd5\x9b\xdb\x11\xb5\xb7\xbb\xdb\x6f\xe8\x57\xf4\xf1\xf7\x91\xcb\x52\xca\xa9\x82\xf5\x21\x13\x92\x5d\x57\xd6\xc8\xe7\xc0\x90\x6d\x74\x0e\xcc\x3c\x3b\x58\xeb\xe1\x17\xd5\x92\x57\x5d\x59\x62\x7b\x4b\x1a\x92\x53\xb5\xd7\x06\x5e\x66\xb0\x58\xc0\xcd\xf2\xff\x20\x4a\x4b\x03\x49\xd3\x22\xd1\xf9\x40\x14\x16\x33\xd8\x19\x1e\x63\xde\x46\x50\xae\x64\x20\x78\xd7\x95\xb9\x71\x96\xc5\x00\x57\x3d\x1a\x78\x16\x53\x3a\x83\x05\x5c\x2f\xad\x5a\xde\xb1\x1d\xb6\x5a\x33\xc9\x55\x47\x6a\x5f\xc9\xa0\x45\xaf\xa5\xc6\x97\xb0\x36\x96\xb2\xf2\x86\x23\x5b\xfd\xb3\xec\xc0\x51\x8a\x16\x92\x1a\x15\x50\x13\x81\x40\xe1\x97\x71\xea\x65\x40\xaf\xae\x7c\x13\x0d\x7a\x74\x78\xdc\xd1\xed\x23\x9a\x7a\x96\x87\x33\x75\x7a\xc1\x72\x5c\xb5\x17\x71\x4f\x8f\xc0\x05\xdf\x71\xed\x2e\x72\xff\x93\x66\x5d\xac\xe9\x57\x84\xbc\x26\x52\xa2\xd4\x39\xa6\x18\x69\x4e\x22\xeb\x03\x35\x7d\x65\xc2\x3c\xad\x91\x7f\x54\x55\x14\x1f\x4b\x8d\x60\x4d\x26\xd3\xa6\x93\x55\x12\x30\xdf\xd1\x6d\xaa\xbf\xfd\x18\xd0\x7f\xb4\x84\x84\xc2\x7a\x7d\x44\x19\x3c\x87\xeb\x50\x97\x49\x4b\x54\xc0\x09\xd3\xe5\xeb\xf2\x05\x5c\xc2\x15\x74\x34\xad\x3a\x46\xf8\xab\xbd\x42\x79\x42\x7b\x28\xc9\x43\xfe\x3b\x61\x3d\x7a\x2d\x3b\x20\x7e\x00\xac\x25\x9e\xc6\x72\x1e\x08\xb8\x82\x4b\x78\x7e\x06\x68\xb8\x82\x6b\xc7\xf3\x03\xb8\x63\xe1\x60\xe2\xc9\x56\x2f\x17\x4b\xb6\xb6\x8d\xfc\x68\x5d\xe0\x89\x8b\x05\x89\x27\xe9\x54\x80\x78\x64\xdf\x13\xbf\x7e\x49\x5d\x2c\x2c\x48\x5d\x8b\x74\xb3\xa1\x4b\x33\xb4\x58\xe3\x3d\xe1\x0a\xde\xdc\xda\xcb\xc4\x55\x5f\x57\xb7\x61\x6d\x35\xbb\x47\x27\x69\xa8\xc9\x5d\x53\x10\x85\xef\xcc\x66\x72\xbc\x2e\x73\xc2\xc5\x07\xb1\xc1\x5c\xf0\xc2\x5c\x88\xcb\xe5\x12\x9e\xf9\x5f\x07\xcc\xda\x3c\xba\xee\xbf\x27\xaa\x4a\xcb\x5a\x88\xf6\xe0\x57\xab\x08\x16\x63\x81\x7e\x4a\x68\x6e\x8b\xd5\x99\xe8\x35\x51\x98\x28\xa7\xc5\xa7\xd4\x89\xe3\x28\xff\x37\x3e\xe4\x9d\xff\xe0\xe5\xd1\x36\xea\x93\x9e\xce\x84\x8f\x7d\x38\x5a\x41\xfe\x44\x26\xee\x11\xca\x56\xb0\xc1\x03\xda\xc8\xc4\xb8\x45\xaf\x18\x17\x28\xc2\x1a\x09\x9f\x2b\x9a\x57\x40\x5a\x84\xa6\xa5\xa2\x05\x25\x7c\x51\x9a\x98\x51\x4e\x59\xc7\x0e\x4c\x40\x39\x5c\x4a\x53\x0c\x2f\xd3\x91\x4d\x98\xbe\x6f\x7a\x67\x1a\xfa\xf4\xef\x5d\x57\xde\x2d\xb7\x59\x48\xf7\xd1\xeb\x11\xa7\x41\x3b\x07\x1e\xc4\xc4\x21\x6a\x75\x31\x8e\x06\xaf\xb6\xf5\xc8\xc2\x74\x0b\x2f\x2c\xa6\x58\x71\xda\xb5\x48\x3e\x1d\x4b\x42\x13\x9e\x0e\x25\x0d\x43\x7d\xe2\x15\xd9\xd4\x34\xc7\x64\x39\xb7\x3c\xce\x33\x0f\x43\x42\xdc\x0a\xae\x08\xe5\x40\x79\x81\x5f\xb0\xb0\xe5\xdd\x54\x7a\x39\x07\x55\x51\x09\xfa\x9f\x53\x45\x49\x4d\xbf\x62\x01\xa4\x54\xd8\x42\x8b\x39\x36\x26\x03\x5c\x2e\x95\xb4\x95\x0a\x18\x4a\x49\x3e\x62\x7a\x11\x96\xf4\x51\x8d\x70\x20\xc2\x02\x14\xd2\x38\x22\x1d\x57\xaf\x6d\xdb\x77\x68\x85\x94\x8c\xb7\x41\x9e\x7b\x4d\x3c\x2a\x39\x33\x4d\xc8\x10\x21\x41\x05\xb3\xad\x80\x37\x1e\x6c\x83\xcb\x67\xd8\xf0\x62\x7a\xc2\xb9\xd9\xcb\x18\xdf\x66\x2f\x4f\x71\xe9\xc1\x22\xc6\xa6\xd7\x4f\xf2\xe9\xa9\x23\xca\xa8\x37\xfc\x14\x9f\xb6\x1c\x47\xa6\x8f\x50\x9a\xdb\xb1\xe2\xbe\x47\x5a\xc4\x12\xfd\xfa\x59\x92\xc2\x39\x66\x22\xcc\x6d\x9d\x8b\x6c\x3c\xee\xc4\xa5\x59\x6c\x17\xf1\x4e\x69\x34\xeb\x4c\xf8\x4d\x07\x2d\xe1\xf9\xa1\xf9\xf8\xb5\x45\x9c\x1c\x35\x22\xcd\xce\x46\xa1\x40\xb7\xfc\x38\xbf\x76\x77\x2c\x04\xfa\xf9\xe3\x91\x46\xf9\x3b\x1a\x33\x7b\x81\x49\x7b\xcf\x4f\x1b\x92\xec\xc4\x25\x6d\xf1\x69\x56\xcf\x52\xe6\x31\xb4\x92\x77\x4b\xc4\x6f\xd4\x51\xd9\x62\xfd\x9d\xe4\x57\x04\x1f\x77\x8b\xaa\x6b\xb9\x5f\x0c\x2c\x43\x12\xca\x91\xba\x38\x8e\xc4\x70\xaa\x90\x8d\x4a\xca\x62\x01\x1f\x28\xb3\xaf\x26\xc6\x97\xb4\x1b\x57\x3c\x35\x46\x5e\x2f\x23\x1b\x5d\x7d\x66\xd8\x6d\x6a\xa1\xa6\x82\x2a\x3b\x07\x1f\x9b\x57\xb3\x1f\x9c\x79\x0e\xe3\x8e\x3f\xfd\x84\x58\xe3\x17\xb6\x49\xa0\x85\x7b\x11\x10\x47\xef\xe5\x5d\xfc\x10\xfe\x14\x9d\x3d\xcd\x2c\x35\x19\xa3\x22\xc3\xd5\x79\x07\xec\x5f\x33\xc4\xcf\x26\x86\x97\x10\x27\x66\xfd\xec\xc7\xa7\xb3\xd1\x60\x16\x8c\x6a\xe7\x9d\xc3\x26\xe4\x30\x96\x4d\x8f\xb2\xdb\x4f\x2f\xe2\x69\xeb\xfd\x34\xbd\xfa\xa8\x66\x8c\x6b\xc2\xb8\x5e\x38\x50\xde\xb9\x0f\xc5\xe3\xf1\x63\xbb\x34\x1f\xeb\x76\x2f\x84\xcc\xd7\x7c\x92\x07\x2b\xf3\x39\x3f\x16\x4c\x2b\xff\x61\x1e\x73\xd1\xaa\xff\x31\x8f\x1d\x64\xd5\xff\x98\x87\x23\x88\x45\xed\x10\xb3\xec\xe2\x21\x99\xcd\xb2\x7f\x03\x00\x00\xff\xff\xe1\x0e\x2c\x5e\x01\x15\x00\x00"),
		},
		"/statsviz.css": &vfsgen۰CompressedFileInfo{
			name:             "statsviz.css",
			modTime:          time.Date(2020, 9, 24, 21, 23, 45, 192276676, time.UTC),
			uncompressedSize: 1027,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x9c\x52\xd1\x6e\x9c\x30\x10\x7c\xe7\x2b\x56\xa9\xaa\x48\x51\x4c\xb8\xab\xd2\x07\xdf\xd7\xf8\xf0\x02\xdb\x2e\x36\xb2\xf7\x02\xa7\x2a\xff\x5e\x19\x0e\x8e\x72\xf4\x25\x0f\x58\xd8\xde\xd9\x19\xcf\x6c\x23\x2d\xbf\xc2\xd9\xdb\xeb\x2b\xe4\x75\x20\xab\x4a\xef\xc4\x90\xc3\x00\x7f\x32\x00\x80\x06\xa9\x6e\x44\xc3\xa1\x28\xbe\x9f\xc6\x93\xd6\x84\x9a\x9c\x86\xe2\x94\x7d\x66\xd9\x3e\xca\x52\xec\xd8\x5c\x35\xa4\xdb\x09\x36\xd6\x09\xb6\x1d\x1b\x41\x55\x7a\xbe\xb4\x2e\x6a\x68\xcd\x30\xa2\xd1\x09\x1c\x8b\xa2\x1b\xf6\xaa\x83\xef\xa3\x86\x43\x15\xe6\xef\x56\x64\x3a\x0d\x87\x6e\x48\xdf\x1e\xcc\x04\x34\x51\xc3\x53\x0e\xf9\xd3\x7a\x1d\x85\x7f\x6b\xd0\xd8\x45\xb0\xe0\x20\xca\x30\xd5\x4e\x43\x89\x4e\x30\x4c\x45\xdb\x87\xf5\x64\xa5\xd1\x70\x38\x1e\x17\xa9\xb3\x1f\xe9\x04\xcc\x45\xfc\xe4\x4b\x24\x57\x33\xaa\x28\x46\xb6\xa6\x54\x8c\x37\xec\xaf\x4b\x14\xaa\xae\xb3\x03\x1a\x62\x67\x4a\x54\x67\x94\x1e\xd1\x9d\xd6\x94\x3f\xb7\xfe\xe7\xef\x01\xdb\x91\xcb\x72\x4e\x8e\xc9\x21\x58\xbb\xe5\x9a\x2e\x1e\x92\x4b\x5b\xc6\x41\xb6\x70\x6d\x2a\x79\x4c\xf1\xcc\xbe\xfc\x3d\x81\x16\xa5\xcf\xcf\x5b\x6e\xd9\xe7\x56\x2b\x74\x4b\x4e\xcd\x16\x4e\x61\xaf\x5b\xa8\x64\xcc\xff\xcd\x4a\x7f\xaa\x62\xdf\x6b\x08\xbe\x5f\x9d\xf5\x21\x0d\x42\x5a\xff\x71\xec\xc7\x7d\x9c\xde\x5e\x20\xa2\x80\x34\x08\xf7\x44\xc7\xb2\x97\xb7\xb1\xc0\x7f\x60\x98\x5a\x7f\x50\xa4\x33\xe3\x9e\xb2\xe5\x85\x69\xa7\xa1\x80\x02\xde\xe7\x54\xc6\x01\xba\x77\x41\x66\xea\x22\xc5\xd3\xa6\x7b\x43\xd6\xa6\x60\x77\x9a\xcf\xd1\x4d\x29\x29\xc6\x4a\xf4\x6d\x9e\xb6\x13\x9a\xee\xbe\x44\xfb\x20\x3e\xfb\xfc\x1b\x00\x00\xff\xff\x70\x11\x3b\x47\x03\x04\x00\x00"),
		},
		"/ui.js": &vfsgen۰CompressedFileInfo{
			name:             "ui.js",
			modTime:          time.Date(2020, 10, 5, 12, 25, 23, 568818269, time.UTC),
			uncompressedSize: 7110,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xe4\x59\x4b\x73\xdb\x36\x10\xbe\xeb\x57\x6c\x0f\x0e\xa5\x88\xe6\x43\x7e\xc4\xa5\x2c\x67\xc6\x6e\xea\x64\x1a\x4f\x3d\xe3\xf4\x90\x68\x7c\x80\x48\x48\x44\x42\x82\x1c\x02\xb4\x25\x27\xfa\xef\x1d\x3c\x28\xf1\x65\x57\x8a\x52\xa7\x33\xe5\x81\x94\x88\x6f\x77\xf1\xed\x62\x17\x0f\xda\x36\xe4\x04\xc2\x24\x0a\x18\xf0\x10\x43\xce\x70\x06\x84\x72\x9c\x4d\x91\x8f\x81\x71\xc4\x71\xe7\x0e\x65\x02\x35\x82\xee\x34\xa7\x3e\x27\x09\x85\x6e\x0f\xbe\x76\x00\x00\x44\x5b\x0c\x23\xf8\xba\x1c\x76\xe4\x8b\x08\x73\x48\x51\xce\x70\x00\x23\x98\xa2\x88\x61\xdd\x10\x5b\x84\x5d\xaf\x1a\xca\x8a\x20\xc3\x3c\xcf\xa8\x16\x1b\xc2\x52\xe3\x79\x32\x9b\x45\x58\xca\x34\x44\x56\x26\x7e\xa9\x4b\xa5\x51\xc2\x19\x8c\x80\xe6\x51\xa4\x4d\xaf\x44\x2f\x2f\xde\x13\x8a\x59\x37\x40\x1c\x15\x0c\xc4\xe5\x27\x94\x71\x98\xf9\x42\x4e\x70\x66\x56\x84\x18\xbf\xbc\x60\xc3\x1a\x24\x26\x54\x2a\x17\x0a\x2c\x4e\x62\xcc\xc6\xce\x6d\x03\x84\xe6\x75\xd0\xfa\xa7\x15\x61\x3a\xe3\x21\xec\x83\x7b\xab\xbb\x57\xb8\x8d\x85\x28\xc5\x42\x70\x5c\x6e\x99\x26\x19\x74\x45\xb3\x88\x80\x63\x02\x85\x91\xe8\xa9\xd6\x33\x04\x02\xa7\x40\x87\x40\xfa\xfd\x32\xa3\x42\x67\xa0\xd0\x63\x52\xea\xa5\xb8\x6c\x1b\x2e\x22\x14\xa7\x70\x79\x01\xb2\x5f\x70\x1f\x12\x3f\x04\x94\x61\x48\x72\x0e\xc9\x14\x26\x49\x4e\x03\x56\x91\x22\x53\xe8\x06\x70\xaa\xdd\xf0\xed\x1b\x04\x70\xa6\xe8\xd6\x6d\x6b\x6f\x70\x42\x73\x5c\xb5\xbc\xec\x54\xfe\x2a\xd2\x56\x9a\xb3\xb0\xdb\x54\xc1\x17\x29\xf6\xc0\x88\x08\xc5\x86\xd9\x68\x9d\x3b\x1e\x04\x2d\xaf\xdd\xd6\xd7\x8b\x0c\x4f\x3d\x30\x52\x94\xe2\xac\x45\xd9\xc2\xf1\xc0\x69\x79\xed\x7a\xe0\x36\x5f\x8b\x1e\x79\x2d\x9c\x15\xef\x28\xc9\x3c\x30\xb2\xd9\xa4\x7b\x74\x64\x82\x3b\x38\x31\xc1\xfd\xd5\xed\xb5\x58\x15\xd7\x3d\x09\x78\xd8\x6a\x45\x5c\x01\x62\xa1\x70\x41\x42\x67\xe2\x67\x90\xf0\x16\x35\xcb\xaa\x8b\x7b\x9d\x66\x83\x4e\x32\xe5\x6f\x15\x92\x65\x2d\x3d\x42\x8c\xd2\xdf\x10\x47\x8d\xfc\xd0\xb2\xe3\x8a\x95\x26\xf9\xb9\x57\x1a\xf3\x2d\xae\xd4\xcd\xc2\xcc\xd8\xb9\x35\x1f\x8b\x36\xf3\x11\xe7\xad\x31\xa2\x28\x16\x00\xa1\x00\x50\x14\x25\x7e\x0b\x26\x4c\xee\x70\xc6\x71\x9c\x46\x88\x0b\xf0\xe9\xe4\x6c\x8d\x3f\xb5\x27\x67\x1e\xec\x7d\x5d\x78\xd6\x21\x5b\x9e\xd7\xc4\x97\xe6\x0f\x24\xe8\xee\x4a\x90\x2d\xd8\x16\xf4\xd8\x82\x3d\x23\xb9\xc1\xae\xe4\x48\x10\xe1\x2d\xd8\x09\xf8\x33\xd2\x3b\xd8\x99\x1e\xdd\xcf\xd9\x56\x04\xa5\xc0\xc6\x14\x6f\xcb\xf9\x6b\xdb\x10\x72\x9e\x32\xcf\xb6\xc5\xe4\x17\x2d\x2c\x3f\x89\xed\xcf\xe8\x0e\x31\x3f\x23\x29\xb7\x33\x3c\xc5\x19\xa6\x3e\xb6\x23\xb4\x48\x72\xbe\x9a\xa8\x85\xe9\xf7\xf2\x95\x98\xc2\x57\xda\x39\xe1\x91\xe8\xdc\x5b\x8c\xd2\x52\x1f\xe6\x68\x4e\x58\xbd\xe8\x15\x58\xe1\xd6\x5a\x7f\x39\xf1\xbf\x4c\x93\x2c\x46\xdc\x03\x63\xef\xad\xb7\x77\xe5\xed\xdd\x94\x30\x25\x3e\x8b\xa7\x54\x4f\x16\x1c\xb3\x16\xdd\x2c\x9f\x4e\xc9\xdc\x03\xa3\xee\x28\xdb\xae\xda\x86\x5a\x3b\x9e\xa7\x09\xc5\x94\xaf\x00\x37\xef\xca\xdd\x52\xbe\xad\xaf\x1d\x62\x96\x22\x7a\x75\x81\xfc\x10\x3f\x43\x8d\x2c\x59\xdb\xa9\x54\x4a\x3d\x40\xe8\xc6\xa3\xb1\x10\xd8\x6a\x38\xfe\x30\xaa\xee\xce\x54\x37\xae\x9a\x2b\xf8\xf3\xb3\xdc\xa5\x7a\xc6\xbe\x50\xb1\x55\x44\x0b\x89\x9f\x13\xd2\x83\xdd\xc9\x6e\x1e\xd3\x15\xfe\xfb\x2a\xa9\xa8\x89\xa5\xbe\x3f\x51\x1a\xaf\x6e\x52\x44\x6d\x05\xfb\xbf\x97\x48\xb5\xeb\x91\xab\x5e\xe6\xa3\x48\x6c\xd6\xd6\x55\x70\xec\x98\x6a\x25\xec\x1e\x1f\x9b\x03\xe7\xd8\x1c\x0c\x5e\x99\xe0\x58\x47\x3d\xa3\x34\x30\xc6\x8e\xe5\x1c\x69\xe0\x81\x6b\xba\x03\xc7\x74\x4f\x1c\xb3\x05\x36\x28\xd4\xbd\x3a\x31\x07\x83\x03\xd3\x3d\x38\x69\x83\x15\xca\x8e\x5c\xd3\x3d\x76\xcc\xc3\xc3\x26\xc8\xd5\x10\xd1\xa1\xc1\xb1\x39\x28\xf4\x48\xc4\x6d\xbd\xfc\x33\xf2\x80\x2f\x22\xc4\x58\x6b\xf1\x17\xdb\xe0\x0c\xf3\x0a\xf3\xef\xcd\x20\xb5\x01\xf5\x85\xad\x1b\xf2\xd0\x06\x7a\xd0\x3a\x26\x8b\x47\x00\x3a\xbf\x42\x8c\x78\x5c\x99\xc2\x1f\xcf\x9d\xec\xec\x74\x72\x26\x48\x82\xb4\xbc\xce\x9f\x25\x9c\x1b\xd0\x6f\xdd\x9a\x14\x62\xc9\xe4\x33\xf6\xf9\x4a\xe6\x61\x29\xde\xb7\x58\x65\x61\x72\x1f\xe1\x19\xa6\x81\xa7\x8e\x06\xcc\x4e\xeb\xde\x49\x8e\x22\xaf\xf4\xbb\x96\xbd\xeb\xe4\x1d\xd6\xa7\xdf\x0c\xf3\x61\x3d\xa3\x57\xa1\x7b\x22\x9f\x85\x23\x41\x82\x2a\x79\xf4\xb3\xf2\x79\x1d\x88\x1f\xb1\x74\xd1\xf1\x79\x86\x65\x8b\xb6\xb4\xd3\x92\x25\x22\x77\x1b\xce\x6c\x02\x09\xb5\xc1\xb7\x58\xfe\x4b\x73\x5a\x41\x6d\x97\x25\x4a\x94\x24\x5f\xf2\x74\xc3\xc9\x2c\x4d\xe4\x41\x1c\x68\xa1\x67\x23\xb8\xeb\xde\x6e\x8b\x5d\xcf\x16\xb1\x6b\xcc\xd3\x5a\xf6\x89\x9c\xfe\x53\x21\xfe\x03\xe9\xac\xfb\x6a\x3c\x92\xa8\xb1\xe5\x67\x18\x71\x7c\xad\x8f\x2e\xd7\x47\x9d\xf5\x6c\xbd\x56\xfb\x3b\xb1\xcd\xeb\x6a\x67\xd7\x4e\x6d\xcc\xd2\xa6\xae\x37\x6c\x17\x94\x4b\x9c\x7d\xb5\x58\x32\xcc\xf6\x9d\x8d\xd9\x5c\x08\x3d\xa6\x4e\x14\xab\x7d\x5d\xac\xda\xe6\x49\xb3\x5e\x81\x1f\x53\x54\xb8\xc9\x6c\x56\x2c\xb3\x1a\xef\x5e\xa5\xc8\xcb\x03\xea\x34\x40\x1c\xbf\x0b\xe6\x30\x02\x67\xa8\xdd\xaa\x5e\xfe\xb3\x5b\xc5\x78\x9a\xf9\xf2\x6c\x18\x46\xd5\x53\xe2\xd2\x49\xec\xda\xb1\xd6\xea\xa8\x56\x4b\x35\x08\x65\x18\xf9\x1b\x85\x68\xad\xbe\xe1\xef\x8d\xad\x7c\x7f\x3c\x57\x0a\x2b\xde\xdd\xd8\xf0\x56\x01\xeb\x94\x4f\x91\xd7\xe1\xda\x83\x23\x18\x8d\xc0\xa9\x9f\x20\xdb\x36\xfc\x25\x41\xf2\xc3\xc4\x7a\x42\x04\xbd\xaa\x81\x23\x7d\x70\x1d\x61\xc6\x20\x99\x72\x2c\x16\x69\xd4\xc7\x40\xb8\xc1\xc4\x44\x89\x29\x23\x77\xd8\x82\x8a\xda\x2a\x81\xed\x87\x6e\xa7\xe5\x1c\x7b\x45\xa6\xdf\xaf\x8c\xcb\xd8\x0a\xf3\x18\xd1\x73\xb1\x38\xaf\x8c\x3f\xb9\x5c\x17\xba\x8b\x6f\x24\x26\x04\x29\x8c\xc0\x6d\x7e\x94\xe0\x61\x86\x59\x08\x23\x01\x7e\x0d\xae\xe3\x38\xe0\x81\xeb\x0c\x0e\x6b\x0e\xbd\x42\x3c\xb4\xd0\x84\x29\xdd\x3d\x38\xd5\x92\x75\xb7\xea\xf9\x5e\xa2\xa0\x0f\x06\x9c\x1b\xc3\x36\x4e\xca\x7a\x4e\x89\x4c\x1d\x46\x2a\x4a\x5e\xc3\xd8\xf8\x72\x6e\x98\x60\x5c\xc9\xfb\xa5\xbc\x7f\x90\xf7\x6b\x79\x7f\x23\xef\x9f\xe4\xfd\xe3\xb9\x5e\x54\x17\x97\x07\x63\xe3\x0f\xa2\xe4\xd5\xe3\x52\x3d\x3e\xa8\xc7\xb5\x7a\xbc\x51\x8f\x4f\xea\xf1\x91\x9c\x1b\xa5\xf5\x9e\x48\xd9\x1c\x46\xb0\xef\xd6\x3f\xbf\x64\xc2\x91\x0e\xbc\x7c\x09\x41\x5a\x72\x52\x90\xd4\x3c\xa1\x5c\x60\x8f\xb4\xa3\xaa\x5f\x29\xfa\xfd\xbc\xe4\x16\xb8\x0f\x49\x84\xb5\x93\xb3\x24\xa7\x41\xc3\xdf\x2f\x21\xeb\x81\x0d\x19\x9c\x15\x0a\xe1\xc5\x0b\xc8\xe1\x54\xf9\xb0\xf4\xd9\xa7\x9c\x0a\xe5\x68\x58\x3c\xf9\x9d\xcc\x71\xd0\x0d\xd2\x9e\x8c\x8c\x01\x7d\x25\x3c\xce\x6f\x57\xe3\xaa\x53\x12\x8b\x87\x9d\x65\xb7\xd7\x1b\xfe\x1d\x00\x00\xff\xff\x56\xbd\xf0\x91\xc6\x1b\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/app.js"].(os.FileInfo),
		fs["/buffer.js"].(os.FileInfo),
		fs["/index.html"].(os.FileInfo),
		fs["/stats.js"].(os.FileInfo),
		fs["/statsviz.css"].(os.FileInfo),
		fs["/ui.js"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
