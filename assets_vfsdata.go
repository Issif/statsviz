// Code generated by vfsgen; DO NOT EDIT.

// +build !dev

package statsviz

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// assets statically implements the virtual filesystem provided to vfsgen.
var assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2020, 10, 4, 14, 8, 1, 435922232, time.UTC),
		},
		"/app.js": &vfsgen۰CompressedFileInfo{
			name:             "app.js",
			modTime:          time.Date(2020, 10, 4, 12, 40, 35, 84217389, time.UTC),
			uncompressedSize: 1414,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x84\x54\xc1\x6e\xdb\x3a\x10\xbc\xfb\x2b\x36\xc2\x3b\x50\x49\x40\xe7\x5d\x7a\x88\xa1\x02\x6d\x92\x43\x0a\xb4\x0d\x62\x14\x39\x14\x45\x40\x53\x6b\x9b\x08\x4d\x0a\xe2\x32\x42\x50\xf8\xdf\x8b\x15\x2d\x5b\x52\xd5\x56\x17\x11\xe2\xec\xec\xec\x70\x28\xb1\x8e\x4e\x93\xf1\x0e\x44\x0e\x3f\x67\x00\x00\xc7\x2f\xff\x09\x53\x76\x1f\xf9\xa9\x91\x62\xed\xa0\xf4\x3a\xee\xd0\x91\xdc\x20\xdd\x59\xe4\xe5\xc7\xb7\xfb\x92\xc1\x8b\x16\xbb\x9f\x0d\x79\x56\xd1\xd8\xf2\x09\x57\xc1\xeb\x17\xa4\x6f\x8f\xf7\xa2\xcf\xfa\xaa\x6a\xb0\x5e\x43\x01\x8d\x71\xa5\x6f\xa4\xf5\x5a\x71\xdd\x25\x34\xe1\xb9\xaa\x3d\x41\x01\x59\x13\xae\xb3\xc5\xb1\xc6\xac\x41\x58\xaf\x25\xef\x7a\xed\x2d\x14\x45\x01\xd9\x96\xa8\x0a\xd7\x59\x9f\x9c\x9f\x26\x3c\xc7\xda\x24\x92\x01\xcb\x7e\x3c\x59\xd7\xef\x02\xb2\xf9\x3c\x83\x0b\xd6\x25\xb7\x3e\xd0\x61\x59\x29\xda\x3a\xb5\x43\x06\x34\x21\xeb\x0f\xab\xbd\x0b\x04\xa5\x22\xf5\x88\x84\x8e\xf5\x2f\x51\x7b\x57\x06\x28\xe0\xdd\xd5\x22\xa1\xe6\xe7\xf0\x84\xab\x65\xeb\x03\x68\x65\xed\x4a\xe9\x97\x00\xe7\xf3\xb4\x6d\x91\x20\x99\x04\x05\x38\x6c\x4e\x60\x31\xe1\xe1\xc1\x6d\xee\xec\x2d\x4a\xeb\x37\x22\xfb\x40\x84\xbb\x8a\x8c\xdb\xc0\x8d\x77\x0e\xdb\x03\x90\x52\x66\xf9\x41\x41\xaa\x97\xde\xf9\x0a\x1d\x14\x7c\xea\xc5\xfb\x9e\x61\x03\xb6\x65\xd4\x1a\x43\x58\x47\x6b\xdf\x3a\x3e\x2c\xb3\xee\x98\xc7\x94\xda\xfa\x80\x50\x00\xbe\xa2\xa3\xbf\xd1\xa6\x11\x6f\x18\x5e\xf6\x74\x5e\x43\x76\x99\x8a\xf3\xd3\x21\x1d\xd8\x03\xba\x52\x64\x37\xd6\x30\x75\xaa\x3c\xcb\xf2\x69\x1d\x58\xd7\xbe\x66\x1d\xe9\xfd\x2f\x1d\x77\x0c\x4b\xbd\x79\x35\x9a\x8e\xe3\x69\x9c\xa1\x5b\xef\x78\xb6\xb5\xb2\x01\x17\xc3\x7e\x3b\x0c\x41\x6d\xfe\x30\x39\x9f\xe9\x0e\x77\x4b\x52\xc4\x51\xf8\xb4\xfc\xfa\x45\x56\xaa\x0e\x28\x5a\xb0\xe4\xc8\xe4\x83\x60\x9f\x75\xed\xc6\x41\x0e\xcc\x21\x79\x57\x4c\x05\xed\xf2\xd8\x47\x7e\xc6\x5d\xcf\xc2\x96\xf8\x34\x02\xd5\x11\x87\x9b\x29\xfe\xfd\x8b\x71\x5c\xc6\xaa\x54\x84\x2d\xab\x98\xa0\x1f\x5f\xf5\x29\x78\x7f\x8c\x34\x42\x15\xc3\xf6\x56\x91\x12\x9c\xf1\x5b\x45\x28\xf2\x93\xf8\x2e\xa9\x9d\x1d\xd1\x48\x13\x1e\x54\x0c\x58\x8a\x7c\x6c\x49\x52\x3e\x25\x9c\x7d\x67\x97\xa0\x38\x34\x0d\xd6\x68\x9c\x34\x2e\x1f\xfe\x58\x18\x22\xb7\xa8\xaa\xef\x57\x3f\xa4\x45\xb7\xa1\x2d\x14\x05\xfc\x3f\xee\x1d\x8d\xd4\x35\x2a\xc2\x07\xeb\x29\xb4\x65\xf9\xd4\xcf\x25\x1a\x99\x6c\xf9\x0d\xb7\x9f\xcd\xf6\xed\x3d\xfe\x15\x00\x00\xff\xff\xd9\x93\xf5\xbb\x86\x05\x00\x00"),
		},
		"/buffer.js": &vfsgen۰CompressedFileInfo{
			name:             "buffer.js",
			modTime:          time.Date(2020, 9, 13, 22, 23, 8, 683400866, time.UTC),
			uncompressedSize: 1561,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x84\x54\xcb\x6e\xdb\x30\x10\xbc\xfb\x2b\x06\xb9\x44\x42\x6c\x2b\xe7\xa6\x2a\xd0\xa6\x3d\xe7\x12\xa0\x87\xa2\x28\xd6\xd2\xca\x22\x40\x93\x04\xb9\x72\x60\x14\xfe\xf7\x82\x7a\xd8\x96\xc3\xb8\x3e\x99\xcb\xe1\x72\x76\x66\xa8\xa2\xc0\xb7\xae\x69\xd8\xa3\xe6\x4a\x93\xe7\x00\x69\x79\xaa\x55\x9a\x42\x58\x2f\xf6\xe4\xa7\x4a\x89\xac\xe9\x4c\x25\xca\x1a\x64\x39\xfe\x2e\x00\x0c\xb0\x09\x31\x94\xfa\xb2\x35\x41\x7c\x57\x89\xf5\x99\x66\xb3\x44\x45\x2e\xbf\xd8\x8f\x3f\xd5\x20\xab\xc8\x61\x05\xcd\x06\x9f\xf1\x78\x0d\x98\x1a\x59\xcd\xeb\x1f\xde\x5b\x9f\xdd\x9d\xf1\xbb\x2e\x08\x36\x0c\x67\x83\x12\xb5\xe7\xbb\xfc\x69\x76\xf8\xb8\x98\x2d\x8b\x02\xaf\x2f\xdf\x5f\x32\xf2\x3a\xff\x84\x3d\xe9\x8e\xd1\x05\x65\xb6\x78\x3d\x38\xae\xbf\x7a\x4f\x07\x78\x92\x96\x3d\xa4\x25\x83\xa1\xd2\xb2\xe7\x59\x1f\x69\x55\x58\xff\xd9\x74\x0d\x4a\x18\x7e\x1b\x60\x71\x8c\xab\xeb\x07\x9c\xb3\x01\x25\x1e\x53\x5b\x71\x86\x32\x4e\x92\xda\x8c\x63\x96\x51\xb3\xf3\xe6\xf1\xf4\x4f\x53\x90\x2c\x25\x66\x7f\x56\xb3\xd9\x4a\x9b\xe5\x28\xcb\xb4\xa2\xd2\x7a\xfb\x86\xfb\x67\x32\xc6\x0a\x2a\xd2\x7a\xea\x68\x0d\xc8\x80\x77\x4e\x0e\xa3\xa3\xf7\xd7\x9a\x5e\xae\x3c\x4b\xe7\xcd\x59\x91\x5f\xa7\x99\x7f\xa7\x68\xbb\x2e\xb4\x99\x93\x0f\x89\xf7\x62\x7d\x29\xcf\x0a\xa4\xc8\x17\x05\x76\x76\xcf\xa8\x49\x08\x62\xfb\xc0\x6e\x78\xbb\x55\x26\x5a\x69\x9b\xa1\xd0\x73\x5f\x82\x9b\x86\xab\x98\x0d\x7d\x40\xad\x42\x45\xbe\x56\x66\x9b\xea\x19\x4f\x55\xe4\x56\xd1\x14\xab\x6b\x0e\x02\xd6\xbc\x63\x23\x21\xa1\xdf\x38\xef\xba\xb2\xee\xf0\x53\x49\xab\x4c\xf6\xb8\xbc\x70\x6e\x75\xb6\xf8\x2a\x15\xd7\xc9\x38\xe1\x6e\x66\x37\xa5\x30\x4a\x38\xf9\x20\x72\x0f\x0f\xc9\xd8\x4c\xc1\xb8\xa9\xff\x05\xf5\x84\xfc\x33\xcb\xff\x47\x7b\x06\x76\x36\xa4\x48\x15\x05\x82\x56\x15\x8f\xe0\x00\x1a\xd7\xa3\x95\xd1\x10\x4d\x12\x0d\x89\x96\x3b\xab\x8c\x04\x38\xcf\x81\x8d\x40\x99\x0b\xbf\xd7\xa7\xa6\x7d\x87\x2c\x31\x42\x51\xe0\x99\x5c\x7f\xa6\x56\x3b\x36\x21\x7e\xca\xc6\x9b\x06\x02\x5c\x8f\xf7\x8f\xd9\xea\x73\x46\x7b\x52\x9a\x36\x9a\xdf\x09\x17\xe9\x8d\x92\x4d\xf2\xa6\x64\x1b\xde\xfa\x0c\x76\x53\x39\xcd\x82\x20\xe4\xe5\x14\x91\xe8\xcd\xea\xfd\xd7\xe2\xfa\x09\xae\x87\xd1\xfb\xb3\xcb\xb1\xc5\x03\xe6\x39\x1c\xc4\x3f\x2e\x86\x2b\xc7\x0e\xc3\x73\x7f\x5a\x1c\xb3\x3c\x7f\xfa\x17\x00\x00\xff\xff\x93\x89\x21\xf8\x19\x06\x00\x00"),
		},
		"/index.html": &vfsgen۰CompressedFileInfo{
			name:             "index.html",
			modTime:          time.Date(2020, 10, 4, 14, 8, 5, 447922007, time.UTC),
			uncompressedSize: 653,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x84\x92\x41\x6f\xdc\x20\x10\x85\xef\xfe\x15\x13\xee\x18\xe5\x56\x45\xd8\x97\x66\x8f\xed\x56\x6d\x54\xa9\x47\x16\xc6\xcb\x44\x18\x10\x8c\x2d\x6d\x7e\x7d\x45\xec\x4d\xb7\x4d\xa5\x9c\x46\xf6\x7b\xf3\x78\x7c\x42\xdf\x3d\x1e\x3f\x3f\xfd\xfa\x76\x00\xcf\x73\x18\x3b\xdd\x06\x04\x13\xcf\x83\xc0\x28\xc6\xae\xd3\x1e\x8d\x1b\x3b\x00\x00\xcd\xc4\x01\xc7\x1f\x6c\xb8\xae\xf4\xa2\xd5\xf6\xdd\x6d\xe2\x8c\x6c\xc0\x7a\x53\x2a\xf2\x20\x16\x9e\xe4\x27\x31\xde\x48\xd1\xcc\x38\x08\x87\xd5\x16\xca\x4c\x29\x0a\xb0\x29\x32\x46\x1e\xc4\x35\x12\x28\x32\x96\xc9\x58\x14\xa0\xf6\xe5\x3b\x29\x1f\x8f\xf0\xf5\xf8\x04\xdf\x0f\x5f\x8e\x3f\x0f\x0f\xc0\x9e\x2a\xd8\x34\xcf\x18\x19\xce\xc8\x15\x0a\xe6\x60\x2c\x3a\xa0\x08\x0e\x57\x0c\x29\x37\x51\xca\x3d\x63\x3b\x13\x6a\xb1\x83\xf0\xcc\xb9\x3e\x28\x65\x5d\xec\x73\x48\xdc\x87\x8b\x6a\x33\x5c\x64\x30\x8c\x95\xfb\x99\x62\xff\x5c\xc5\xa8\xd5\xb6\x37\x76\x5a\x6d\x14\x3a\x7d\x4a\xee\xf2\xa7\x18\x5c\xc3\x30\x27\xeb\x9f\x6b\x7f\x26\xf6\xcb\xa9\xa7\xb4\xfd\x51\x05\x4d\x90\x4c\x33\xc2\x5b\x17\x47\x2b\x90\x1b\x44\x4b\xc4\xb2\x23\x7a\x55\xfc\xfd\x0d\x5b\x7f\xbf\xfb\x95\xa3\xf5\xca\xf8\x66\x37\xb7\x7e\xaf\xd2\x5f\x4a\xa5\x17\x94\x36\x98\x5a\xdf\xf4\xf7\x08\x7a\x75\x5a\xa6\x09\xcb\x3f\xb7\xfc\x8f\xaf\xb6\x3e\x1f\xdb\x16\xfa\xd8\x63\x72\x7e\x47\x75\xa3\xd9\xf0\xb6\xd7\xf7\x3b\x00\x00\xff\xff\xca\x65\xf8\xc3\x8d\x02\x00\x00"),
		},
		"/stats.js": &vfsgen۰CompressedFileInfo{
			name:             "stats.js",
			modTime:          time.Date(2020, 10, 4, 13, 13, 37, 688105849, time.UTC),
			uncompressedSize: 3878,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xac\x57\xdd\x8e\xdb\x36\x13\xbd\xf7\x53\x9c\xef\xe2\xc3\xca\xb1\x23\x7b\xd3\x5e\xd9\x51\x80\x64\x83\xa6\x05\x9a\x06\xa8\x73\xb7\x30\x0a\x5a\x1a\x45\x44\x45\x4a\x20\xa9\xec\x3a\xc1\xbe\x7b\x41\x52\x96\x28\x59\x76\x52\xa4\x8b\x20\x5e\x8b\xf3\x73\x34\x73\xe6\x70\x76\xb5\x82\x36\xcc\x68\x14\x55\x99\x69\x98\x82\x90\x31\xc3\xc0\x64\x86\xbc\x91\xa9\xe1\x95\x84\xa9\x20\xaa\x8c\xe7\x47\x70\x13\xcf\x3e\x33\xd5\xfa\x24\x88\x3a\x9b\x68\x8e\xaf\x33\x00\xb0\xc7\x02\x09\xbe\x3e\x6d\x67\xee\x41\x5a\x49\x6d\xc0\xb3\xc7\x8f\x5c\x90\x75\x5a\x6f\x87\xcf\x7f\x25\x56\xbf\x2e\xcb\x2a\x45\x82\xdb\x89\xb3\xdd\xd1\x7a\xbd\x98\x38\xf9\x2d\x2b\x09\x09\x7e\x9a\x3a\x92\x8d\xb6\x67\x3f\x0f\x50\xc8\x46\xec\x48\x71\xd2\xd6\xc4\x9f\xf6\x87\xa6\x32\xac\xf4\xc7\x16\x09\x16\x43\xf3\x2d\x56\x2b\x18\xf7\x0e\x0b\x54\xa6\x20\x05\xed\x0e\x67\xdd\x7b\xbb\xd2\x25\x6d\x21\xec\x8f\x37\xd8\x40\xd2\x03\x5e\x2b\xc5\x8e\x51\x90\x64\xbe\xb4\x11\x3f\x7e\x78\xfb\x61\x03\x45\x92\x09\xb2\x95\x76\x19\x3c\x88\x2e\x4c\xc9\xb4\x79\x77\x37\x88\x33\x5f\xce\xba\xe3\xc3\x71\xc7\xbf\xd0\x06\xb2\x29\xcb\xa5\x7b\x7a\xaa\xbd\x88\xb9\xe4\x06\x49\xdf\xcb\xe8\xd0\xe4\x25\xc9\x25\x04\x89\x9d\xed\xe2\x3c\x80\xeb\xeb\x40\x8f\x46\xb1\x37\x4d\x9e\x93\xba\x63\x35\x4b\xb9\x39\xda\xfa\xaf\x5d\x01\x5e\xac\xff\x8f\x2a\xf7\x36\x88\x6a\x45\xcc\x76\x8e\x19\xca\xe6\x38\x38\x1f\x57\x85\xba\xe2\xd2\xe8\x51\xe0\x43\x93\xa7\xae\xec\x1e\x03\x16\x27\x34\x78\x36\x95\x74\x8e\x15\x6e\xd7\x3e\xad\x6c\xc4\x81\x94\xcd\xcc\x52\xd3\xb0\x32\x4c\xd2\x65\xc9\x2b\x85\xa8\x24\x03\xee\x58\x06\x8e\x97\x61\x53\xb7\xe0\x8b\x45\xf8\xba\xf6\xc7\xc6\x89\x7d\xbd\xef\xf9\x1e\x89\x2b\xb1\xc7\xd1\x95\xca\xe3\x9e\x6f\x3b\xc7\xa7\x3e\xe7\x6a\x85\x82\x98\x11\xac\xde\xe0\x78\x15\xc9\xa9\xe0\xf1\x1b\xd7\xae\xb8\x24\xf9\xc9\x14\x93\xa0\x44\x9c\x96\x4c\x6b\x6b\xa6\xe3\xba\xd1\x45\x34\x72\xbe\xe7\xfb\xd8\x7e\xce\xb7\xb3\x81\x23\xcf\x11\x71\x24\xc9\x85\x64\x78\x8e\xdb\x71\x2e\xc7\x2f\x32\x70\xfc\x4b\x70\xf3\x0a\x37\x58\xa0\xe1\x71\xd1\x08\x26\xdf\x1c\x0d\xe9\x2b\xd9\xc7\x91\x02\xe4\x7f\x30\x71\x42\x6f\x63\x8f\x8c\x9f\x40\xa5\xa6\xeb\x58\xbe\x0f\x04\x16\xb8\xc1\xf3\xef\x00\x8d\x05\x6e\x5b\x9f\x1f\xc0\x3d\x45\x02\x47\x22\x3f\x85\x2d\x83\xfc\x90\x0e\xfa\xe8\x5b\x10\x84\x9b\x22\x49\x10\xe9\x1a\x41\x02\xb3\x7f\xc3\xda\x50\x1a\x56\x2b\x0f\xd2\xce\x94\x95\x7d\xab\x31\x50\x54\xd2\x67\x26\x0d\xde\xdd\x79\x21\x6a\x55\xa4\x15\x20\x24\x3e\x73\xfb\xb5\x8d\xd4\x69\x4b\x53\x67\xcc\xd0\xef\xee\x30\xba\xac\x2f\x92\xc9\xea\x63\xb5\xa3\xb4\x92\x99\x53\xda\xf5\x7a\x8d\x67\xe1\x47\x8f\xd9\x96\xc7\xea\xd7\x7b\x66\x8a\x38\x2f\xab\x4a\xf5\x7d\xf5\x89\xb0\x1a\x06\x0c\x47\xc2\x7a\x7b\xac\x6d\x89\xde\x32\x43\x91\x69\xb3\x84\x96\x76\x70\x5a\xcb\xff\x0d\x5f\xf2\x3e\xfc\x12\xcc\xd1\x7e\xb2\x27\x27\x3b\x47\x1f\xff\xe5\xa2\x6e\xfc\x49\xa2\xfa\x4c\xc8\x55\x25\xba\x0e\xd8\x22\x33\xd7\x16\xfb\xc4\xb5\xc0\x30\x51\x6b\x3c\x14\x3c\x2d\xc0\x14\xa1\x56\xbc\x52\x30\x55\x18\xca\x1a\x0b\x2e\xb9\x68\x44\xef\x04\x2e\x71\xe3\xa5\xed\x26\x1e\xd4\x44\x58\xdd\x3c\x35\xf3\x24\x7e\xed\x05\xbd\x8f\xff\x3a\x34\xf9\xfd\x7a\xbf\x1d\xbb\x7c\x4a\xfb\xcb\xfb\x9c\xbf\x4b\xc8\x11\x3d\x7a\x02\xe3\x25\xe4\x24\x8f\x6d\xd9\x07\xc5\xe6\x7b\xbc\xf2\xf0\xa6\x74\xea\xa0\x88\xfd\x7d\x69\x1e\x1d\x53\x5b\x94\x7c\xcc\xfa\xb3\x06\xe9\xba\xe4\x29\x45\xeb\xa5\xf7\x69\x9b\xf4\xd4\xcd\xc6\x5d\x25\x0d\xe3\x12\x5c\x66\xf4\x48\x19\xdc\x20\x43\xdb\x49\x5e\xc2\x14\x5c\xc3\xfe\x93\xdc\x70\x56\xf2\x2f\x94\x81\xe5\x86\x14\x14\xa5\x54\xbb\x61\x68\xc7\x2a\xe7\x4a\x1b\x08\xd2\x9a\x7d\xa2\x78\x36\x56\xf7\x81\x5c\xb4\x20\xc6\x5a\x34\xb6\x69\x8d\x2c\xc5\xde\xfa\x85\xa3\xbf\xdd\x8d\x9e\xbe\xd9\xa7\x3b\xed\x58\x6a\xf4\xbc\x5f\x6d\x2c\x6f\x2e\x39\x75\x7b\xda\x7e\x74\x27\x75\x07\x01\xd5\x27\x7c\x77\x47\x3d\xe5\xb9\x3b\xea\xeb\x7e\x76\xcb\x9b\x72\xb4\xcf\xbf\xe1\x69\x97\xc0\x49\x57\x7b\x10\xce\xff\x0f\x5e\xd8\x5e\xd8\xb4\xd7\xff\xf3\x8b\x6a\x7b\x45\xbc\x3d\x3a\xeb\x1a\xbf\x77\xbb\x94\xc6\x73\x17\x29\xfe\x45\x11\xe9\x69\xf5\x98\x56\xda\x01\x87\xc5\x49\xab\x42\x7a\x84\xb8\x15\x99\x46\xc9\x0b\xcc\xf0\xbe\xd1\x38\xa4\xb6\x43\x33\x88\x28\xb9\x21\x31\xa0\x9a\xdd\x69\xb9\xf0\x7f\x47\x0c\x75\xbc\xdd\xff\xa7\x33\xba\xd0\xa7\x70\xdb\x81\x50\xba\x65\xbd\x2e\x2b\x73\x1e\xb3\xf0\x7b\x7c\x3f\x1f\x83\x95\x3d\x28\x5e\xb0\x69\x3b\xd5\xd5\x5c\xa6\x04\x59\x3d\xe0\x81\x90\x51\x5a\x5a\x69\xf5\x08\x35\xd5\x4c\x31\x43\x65\xbf\xcf\xd9\x34\xf7\x6b\x7b\xd1\x3a\x93\x0b\x1a\x78\xeb\x78\x93\x8c\xff\x6c\x98\xe0\x8b\x8b\xe7\x2e\xee\xe1\xfe\x39\xae\xc2\xf4\xc5\xe1\x79\xa5\x4f\x8b\xe7\x79\x55\x0e\xc7\x73\x71\x39\xdf\x2c\xfe\x9b\x55\x64\x40\xfd\x21\xb5\x87\xb4\x6f\x41\x05\xaf\xdd\xcf\xc0\xb7\x5f\xbb\x65\xeb\x30\xb7\x6b\xc6\xc6\x7f\x2c\xcf\x0a\xbc\x71\xff\x2f\xa7\x40\x6c\x4e\xbf\x2c\xc7\xdb\x91\xcf\xd8\x66\x13\xdb\xd9\x53\x34\x9f\x6f\xff\x09\x00\x00\xff\xff\xbc\x58\x11\x6f\x26\x0f\x00\x00"),
		},
		"/statsviz.css": &vfsgen۰CompressedFileInfo{
			name:             "statsviz.css",
			modTime:          time.Date(2020, 9, 24, 21, 23, 45, 192276676, time.UTC),
			uncompressedSize: 1027,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x9c\x52\xd1\x6e\x9c\x30\x10\x7c\xe7\x2b\x56\xa9\xaa\x48\x51\x4c\xb8\xab\xd2\x07\xdf\xd7\xf8\xf0\x02\xdb\x2e\x36\xb2\xf7\x02\xa7\x2a\xff\x5e\x19\x0e\x8e\x72\xf4\x25\x0f\x58\xd8\xde\xd9\x19\xcf\x6c\x23\x2d\xbf\xc2\xd9\xdb\xeb\x2b\xe4\x75\x20\xab\x4a\xef\xc4\x90\xc3\x00\x7f\x32\x00\x80\x06\xa9\x6e\x44\xc3\xa1\x28\xbe\x9f\xc6\x93\xd6\x84\x9a\x9c\x86\xe2\x94\x7d\x66\xd9\x3e\xca\x52\xec\xd8\x5c\x35\xa4\xdb\x09\x36\xd6\x09\xb6\x1d\x1b\x41\x55\x7a\xbe\xb4\x2e\x6a\x68\xcd\x30\xa2\xd1\x09\x1c\x8b\xa2\x1b\xf6\xaa\x83\xef\xa3\x86\x43\x15\xe6\xef\x56\x64\x3a\x0d\x87\x6e\x48\xdf\x1e\xcc\x04\x34\x51\xc3\x53\x0e\xf9\xd3\x7a\x1d\x85\x7f\x6b\xd0\xd8\x45\xb0\xe0\x20\xca\x30\xd5\x4e\x43\x89\x4e\x30\x4c\x45\xdb\x87\xf5\x64\xa5\xd1\x70\x38\x1e\x17\xa9\xb3\x1f\xe9\x04\xcc\x45\xfc\xe4\x4b\x24\x57\x33\xaa\x28\x46\xb6\xa6\x54\x8c\x37\xec\xaf\x4b\x14\xaa\xae\xb3\x03\x1a\x62\x67\x4a\x54\x67\x94\x1e\xd1\x9d\xd6\x94\x3f\xb7\xfe\xe7\xef\x01\xdb\x91\xcb\x72\x4e\x8e\xc9\x21\x58\xbb\xe5\x9a\x2e\x1e\x92\x4b\x5b\xc6\x41\xb6\x70\x6d\x2a\x79\x4c\xf1\xcc\xbe\xfc\x3d\x81\x16\xa5\xcf\xcf\x5b\x6e\xd9\xe7\x56\x2b\x74\x4b\x4e\xcd\x16\x4e\x61\xaf\x5b\xa8\x64\xcc\xff\xcd\x4a\x7f\xaa\x62\xdf\x6b\x08\xbe\x5f\x9d\xf5\x21\x0d\x42\x5a\xff\x71\xec\xc7\x7d\x9c\xde\x5e\x20\xa2\x80\x34\x08\xf7\x44\xc7\xb2\x97\xb7\xb1\xc0\x7f\x60\x98\x5a\x7f\x50\xa4\x33\xe3\x9e\xb2\xe5\x85\x69\xa7\xa1\x80\x02\xde\xe7\x54\xc6\x01\xba\x77\x41\x66\xea\x22\xc5\xd3\xa6\x7b\x43\xd6\xa6\x60\x77\x9a\xcf\xd1\x4d\x29\x29\xc6\x4a\xf4\x6d\x9e\xb6\x13\x9a\xee\xbe\x44\xfb\x20\x3e\xfb\xfc\x1b\x00\x00\xff\xff\x70\x11\x3b\x47\x03\x04\x00\x00"),
		},
		"/ui.js": &vfsgen۰CompressedFileInfo{
			name:             "ui.js",
			modTime:          time.Date(2020, 10, 4, 14, 7, 42, 951923272, time.UTC),
			uncompressedSize: 4208,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xc4\x57\xdd\x6f\xdb\x36\x10\x7f\xf7\x5f\x71\x7b\x48\x65\xd7\x8a\x3e\x9c\x38\xcd\x64\x3b\x05\x9c\x75\x69\xb1\x16\x08\xd0\xee\xa1\x35\xf2\x40\x4b\x67\x8b\xad\xbe\x40\x52\xa9\x9d\xd6\xff\xfb\x40\x91\xb6\xf5\xc1\x66\x1b\xb2\x62\x7a\x20\x6d\xf2\x77\xc7\xbb\xe3\x7d\xd1\x75\xa1\xa4\x10\xe7\x49\xc4\x41\xc4\x08\x25\x47\x06\x34\x13\xc8\x56\x24\x44\xe0\x82\x08\xec\xdd\x13\x26\x51\x33\xe8\xaf\xca\x2c\x14\x34\xcf\xa0\x3f\x80\x6f\x3d\x00\x00\xb9\x97\xc2\x0c\xbe\xed\x26\xbd\x6a\x21\x41\x01\x05\x29\x39\x46\x30\x83\x15\x49\x38\xea\x8d\xd4\xa1\xfc\xf6\xb0\x51\x67\x04\x0c\x45\xc9\x32\x4d\x36\x81\x9d\xc6\x8b\x7c\xbd\x4e\xb0\xa2\xe9\x90\x1c\x8e\xf8\xa5\x4d\x55\x24\xb9\xe0\x30\x83\xac\x4c\x12\x7d\xf4\x81\xf4\xe6\xfa\x2d\xcd\x90\xf7\x23\x22\xc8\x5e\x03\xf9\x85\x79\xc6\x05\xac\x43\x49\x27\x75\xe6\x4e\x42\xb8\xb8\xb9\xe6\x93\x16\x24\xa5\x59\xc5\x5c\x32\x70\x62\x24\xc5\xc2\xbb\x5b\x78\x77\x1d\x18\xd9\x74\x61\xf5\x3f\x4e\x82\xd9\x5a\xc4\x70\x0a\xfe\x9d\x16\x72\x6f\x3c\x1e\x93\x02\x25\xf1\xa2\xbe\xb3\xca\x19\xf4\xe5\xb6\xbc\x07\xcf\x86\x0c\x66\x52\x5e\xcd\x67\x02\x14\xa6\x90\x4d\x80\x0e\x87\x75\xbd\xf6\x3c\x23\x85\x5e\xd0\x9a\xa4\xf2\x73\x5d\xb8\x4e\x48\x5a\xc0\xcd\x35\x08\x9a\x22\x87\xaf\x31\x0d\x63\x20\x0c\x21\x2f\x05\xe4\x2b\x58\xe6\x65\x16\xf1\x06\x15\x5d\x41\x3f\x82\xa9\x36\xc6\xf7\xef\x10\xc1\x95\x52\xb9\x7d\xb6\xb6\x88\xa0\x59\x89\xcd\x93\x77\xbd\xc6\x5f\xa5\xb4\x53\x94\x3c\xee\x77\x59\x88\x6d\x81\x01\x58\x09\xcd\xd0\xb2\x3b\xbb\x1b\x2f\x80\xc8\xb0\xec\x1b\x97\xb7\x0c\x57\x01\x58\x05\x29\x90\x19\x98\x6d\xbd\x00\x3c\xc3\xb2\x1f\x80\xdf\x5d\x96\x12\x05\x06\x9d\x95\xde\x49\xce\x02\xb0\xd8\x7a\xd9\x1f\x8f\x6d\xf0\x47\x97\x36\xf8\xbf\xfa\x03\xc3\xa9\xf2\xfb\x4a\x23\x11\x1b\x4f\x91\x5f\x44\x78\x2c\x4d\x90\x67\x6b\xf9\x33\xca\x85\x81\xcd\xae\x69\xe2\x41\xaf\xbb\xa1\x43\x4d\xd9\x5b\x5d\x89\xbe\x0a\xd7\x85\x58\x88\x82\x07\xae\x2b\x43\x28\xd9\x3a\x61\x9e\xba\x9f\xc9\x3d\xe1\x21\xa3\x85\x70\x19\xae\x90\x61\x16\xa2\x9b\x90\x6d\x5e\x8a\x43\xb8\x4b\x9f\x7e\x5b\x2d\xc9\x44\x70\x38\x4a\x50\x91\xc8\x6b\x7b\x8d\xa4\xa8\x09\xbb\x21\x1b\xca\xdb\x46\xdb\x63\xa5\x13\xb6\x14\x13\x34\xfc\xb2\xca\x59\x4a\x44\x00\xd6\xc9\xeb\xe0\xe4\x5d\x70\xf2\xbe\x86\xd9\x1d\x7f\x6e\x1f\x63\xbd\xdc\x0a\xe4\x06\xde\xbc\x5c\xad\xe8\x26\x00\x6b\xde\xda\x74\xdd\xe6\xd9\xd0\xda\xc7\x4d\x91\x67\x98\x89\x03\xe0\xfd\x9b\xba\x58\xca\xb6\xed\x0c\x24\x6d\xf5\x1b\x11\xa4\x93\x82\xf4\xc5\x2c\x1a\x47\x74\x3d\x6b\x13\x34\x92\x8a\xc1\x53\xeb\x00\xdf\x00\xd0\xc1\xc4\x43\x22\x84\x31\x04\x32\x92\x4a\x80\x64\x00\x24\x49\xf2\xd0\x6a\xba\x95\xfd\x9f\x8a\x38\x7a\xaa\x88\x7c\xcb\x7f\xaa\x80\x67\x4f\x15\x90\x46\x09\xfe\x54\x09\xcf\x9f\x2c\x61\x76\x5a\xf2\x1f\xcb\x78\x57\x4f\x13\x55\x89\xa2\x0f\x78\x9d\x10\xce\x1f\x89\xfa\xf7\xf4\x01\xa1\x02\x35\xa2\xee\xff\x8a\x7e\x29\x32\x84\x52\x9c\x27\x44\xb1\x2a\xee\x55\x62\xe7\x21\x49\x64\x57\x72\x8c\xd7\x85\x67\xab\x64\xef\x5f\x5c\xd8\x23\xef\xc2\x1e\x8d\x5e\xd8\xe0\x39\xe3\x81\x55\xbb\x9f\x85\xe7\x78\x63\x0d\x3c\xf3\x6d\x7f\xe4\xd9\xfe\xa5\x67\x1b\x60\xa3\x3d\xbb\x17\x97\xf6\x68\x74\x66\xfb\x67\x97\x26\xd8\x9e\xd9\xd8\xb7\xfd\x0b\xcf\x3e\x3f\xef\x82\x7c\x0d\x91\x02\x8d\x2e\xec\xd1\x9e\x4f\x85\xb8\x6b\x67\xa8\xc3\xe5\x1a\xd3\x94\xec\xf7\x18\x8a\x86\xe6\x8f\xfb\x70\xd5\x57\x18\x3d\x58\x75\x5a\xd5\xa5\x48\x6f\x31\x80\x1e\x34\x8f\xe5\xf6\x07\x00\xed\xe6\x31\x12\x91\x36\xaa\xcc\xfe\x8b\xf3\x7b\x64\x02\xd3\x22\x21\x42\x22\xa7\x4b\x76\x35\x5d\x5e\x1d\xdd\x61\xea\x2e\xaf\x02\x38\xf9\xb6\x0d\x76\x30\xb7\x60\x68\xac\xbe\x7b\xb2\x7c\xf9\x19\x43\x71\xa0\x79\xd8\xc9\x75\xc3\xa9\x3c\xce\xbf\x26\xb8\xc6\x2c\x0a\x54\x0f\x6c\xf7\x8c\xed\x41\xe5\x45\x41\xed\xb7\xdd\x33\xd7\xf3\x5a\xdf\xa6\x0b\x05\x43\xd1\x28\xdf\xa9\x13\x32\x24\x02\x6f\x75\xfb\x7b\x6c\x97\xdb\x57\x78\xab\xaa\xbb\x2c\xf2\xfd\x2a\xfe\x2d\xbb\x55\x96\xec\x5a\x49\x1f\x4c\xcc\x84\xd2\x82\xa7\x3a\xa0\x4c\x3e\x63\xb7\xb3\xc4\xa0\x21\x6e\xf5\xa6\x28\x22\x22\xf0\x4d\xb4\x91\x2d\xed\x44\x6b\xa1\x16\xff\x5e\x8b\xa3\x84\xce\xa1\x63\x6e\xb4\xf7\x1d\xb9\x19\x92\xf0\x1f\x69\x7c\x6c\x4d\x65\xa7\x7b\x94\xf2\x04\xc6\x30\x9b\x81\xd7\xee\x72\x5d\x17\xfe\xac\x40\xd5\x13\xea\xe8\x5a\xa0\xdd\x12\xc6\xba\xb9\x4e\x90\x73\xc8\x57\x02\x65\x94\x65\x21\x02\x15\x16\x97\x19\x08\x33\x4e\xef\xd1\x81\x06\xdb\xa6\xd8\xff\xde\xde\x3d\x43\xaf\x7d\x50\x66\x38\x6c\x79\x4f\x5c\xa6\x24\x9b\xcb\x1e\xa9\x61\xf6\xaa\x6b\x92\xbc\xf7\xaf\x39\x1b\xa2\x02\x66\xe0\x77\x9f\x4f\x22\x66\xc8\x63\xf9\x82\xa2\xf0\x12\x7c\xcf\xf3\x20\x00\xdf\x1b\x9d\x4f\x9a\x06\x7d\x47\x44\xec\x90\x25\x57\xbc\x07\x30\xd5\x94\x6d\xb3\x6a\x47\xaf\x50\x30\x04\x0b\xe6\xd6\xc4\xa4\x93\x3a\xbd\xcc\x68\xe5\x31\x9c\x36\x98\xbc\x84\x85\xf5\x65\x6e\xd9\x60\xbd\xab\xc6\x9b\x6a\xfc\x50\x8d\xb7\xd5\xf8\xaa\x1a\x3f\x55\xe3\xc7\xb9\xce\x8a\xfb\x2f\x80\x85\xf5\x07\x55\xf4\x6a\xba\x51\xd3\x07\x35\xdd\xaa\xe9\x95\x9a\x3e\xa9\xe9\x23\x9d\x5b\xb5\x80\x95\x15\xb3\x84\x19\x9c\xfa\xed\x67\x22\x93\x86\xf4\xe0\xf9\x73\x88\x8a\x9a\x91\xa2\xbc\x65\x09\x65\x02\x77\xa6\x0d\xd5\x7c\x49\x0d\x87\x65\xcd\x2c\xf2\x01\x97\xa0\x36\x32\x93\x6f\xb7\x8e\xbd\x9f\x03\x1b\x80\x0b\x0c\xae\xf6\x0c\xe1\xd9\x33\x28\x61\xaa\x6c\x58\x7b\x9a\x0e\x6a\x42\xd5\x6f\xc3\x11\xf9\xef\x74\x83\x51\x3f\x2a\x06\xd5\xcd\x58\x30\x54\xc4\x8b\xf2\xee\xe0\x57\xbd\x1a\x59\x3a\xe9\xed\xfa\x83\xc1\xe4\xaf\x00\x00\x00\xff\xff\x35\x13\x42\x15\x70\x10\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/app.js"].(os.FileInfo),
		fs["/buffer.js"].(os.FileInfo),
		fs["/index.html"].(os.FileInfo),
		fs["/stats.js"].(os.FileInfo),
		fs["/statsviz.css"].(os.FileInfo),
		fs["/ui.js"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
